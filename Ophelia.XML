<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ophelia</name>
    </assembly>
    <members>
        <member name="T:Ophelia.Ancestros.OAPIAGn">
            <summary>
            Clase BD Ancestro
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OAPIAGn.BOException">
            <summary>
            Objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OAPIAGn.BParamXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OAPIAGn.pTOContext">
            <summary>
             TOContext Generico cuando no se usua uno espesifico
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OAPIAGn.vMensaje">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OAPIAGn.vTipo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OAPIAGn.#ctor">
            <summary>
            Constructor del BO abstracto
            </summary>
        </member>
        <member name="T:Ophelia.Ancestros.OWSAGn">
            <summary>
            Clase BD Ancestro
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OWSAGn.BOException">
            <summary>
            Objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OWSAGn.BParamXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OWSAGn.#ctor">
            <summary>
            Constructor del BO abstracto
            </summary>
        </member>
        <member name="T:Ophelia.Ancestros.OCTRAGn">
            <summary>
            Controlador General del sistema
            </summary>
        </member>
        <member name="T:Ophelia.Ancestros.OCTRAGn.ToolBarDelegateQBE">
            <summary>
            Evento delegado QBE 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.nuevoTextboxToolbar">
            <summary>
            variable evento delegado QBE nuevoTextboxToolbar
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.nuevoTextboxGotFocusToolbar">
            <summary>
            variable evento delegado QBE nuevoTextboxGotFocusToolbar 
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._rutBotonGris">
            <summary>
            Ruta de Botones Gris
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._tituloPrograma">
            <summary>
            Titulo asigandao al programa
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._programa">
            <summary>
            Nombre del programa
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._modulo">
            <summary>
            Nombre del modulo al que pertenece el programa
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._nombreImagen">
            <summary>
            Nombre de la imagen para visualizar en el encabezado de la p√°gina
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._alfabeto">
            <summary>
            Conjunto de caracteres validos para la consulta
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.dtConsulta">
            <summary>
            Conjunto de datos para la pagina de consulta
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.dtLupa">
            <summary>
            Conjunto de datos para busquedas dentro de la lupa
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.BOException">
            <summary>
            objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.HLista">
            <summary>
            Objeto utilizado para obtener datos de listas estaticas
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn.BParamXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OCTRAGn._MaximoListaConsulta">
            <summary>
            Maxio de registros en lista
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.#ctor">
            <summary>
            Inicializa una nueva instancia de un objeto OCTRAGn.OCTRAGn
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OCTRAGn.programa">
            <summary>
            Codigo identificador del programa
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OCTRAGn.modulo">
            <summary>
            Modulo al que pertence el programa
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OCTRAGn.tituloPrograma">
            <summary>
             Titulo Programa
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OCTRAGn.maximoListaConsulta">
            <summary>
              Maximo de registros Lista Consulta
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.OCTRAGn.nombreImagen">
            <summary>
               Nombre Imagen Programa
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.Compress(System.Byte[])">
            <summary>
            Compressing ViewState Compression
            </summary>
            <param name="data">Data</param>
            <returns>Data</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.Decompress(System.Byte[])">
            <summary>
            Decompressing ViewState Compression
            </summary>
            <param name="data">Data</param>
            <returns>Data</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.Copyright">
            <summary>
            Metodo para mostrar cadena de copia retringoda en las paginas
            </summary>
            <returns>Cadena con valor a mostrar</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.SessionesConsultar(System.String)">
            <summary>
            DiegoC: Metodo utilizado para el control de Sessiones.
            </summary>
            <param name="pSES_USUA">Usuario</param>
            <returns>True si puede Ingresar o False Si no puede Ingresar</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.Sessiones">
            <summary>
            DiegoC Metodo utilizado para agregar una session al control
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.MensajeControlError(System.Web.UI.WebControls.Panel,System.String,System.Int32)">
            <summary>
            Funcion Utilizada para mostrar los mensajes 
            </summary>
            <param name="pError">Panel de Error</param>
            <param name="pMensaje">Mensaje</param>
            <param name="pIdMesaje">Nivel de error 0. LimpiarPanel, 1. OException, 2.Exception</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.MensajeControlError(System.Web.UI.MasterPage,System.String,System.Int32)">
            <summary>
            Funcion Utilizada para mostrar los mensajes 
            </summary>
            <param name="pMaster">Pagina Maestra</param>
            <param name="pMensaje">Mensaje</param>
            <param name="pIdMesaje">Nivel de error 0. LimpiarPanel, 1. OException, 2.Exception</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.AsignarTitulosPagina(System.String,System.String,System.String,System.String)">
            <summary>
            Asigna el titulo y subtitulo de la pagina
            </summary>
            <param name="pTituloPagina">cadena de texto con el titulo de la pagina</param>
            <param name="pTipoPagina">cadena de texto con el subtitulo de la pagina</param>
            <param name="pNombrePrograma">Nombre Programa</param>
            <param name="pNombreImagen">Nombre Imagen</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.AsignarNavegarPagina(System.String)">
            <summary>
             Asignar Navegar Pagina
            </summary>
            <param name="pNavegacion">Navegacion</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.DatoCookies(System.String,System.String)">
            <summary>
            Funcion utilizada para guardar los datos en una Cookies
            </summary>
            <param name="pNombre">Campo o Identificador Nombre</param>
            <param name="pValor">Valor</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.DatoCookies(System.String)">
            <summary>
            Funcion utilizada para Obtener los datos en una Cookies
            </summary>
            <param name="pNombre">Campo o Identificador Nombre</param>
            <returns>valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.DatoSession(System.String,System.String)">
            <summary>
            Funcion utilizada para guardar los datos en una Session
            </summary>
            <param name="pNombre">Campo o Identificador Nombre</param>
            <param name="pValor">Valor</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.DatoSession(System.String)">
            <summary>
            Funcion utilizada para Obtener los datos en una Session
            </summary>
            <param name="pNombre">Campo o Identificador Nombre</param>
            <returns>valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.DatoCookiesExpire(System.String)">
            <summary>
            FuncionUtilizada para validar si una Cookies expiro o no
            </summary>
            <param name="pNombre">Campo o Identificador Nombre</param>
            <returns>true o false</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConfirmarEvento(System.Web.UI.WebControls.GridViewRowEventArgs,System.String,System.String)">
            <summary>
            Muestra un mensaje de confirmaci√≥n sin postback para un GridView
            </summary>
            <param name="e">Evento de Fila del GridView</param>
            <param name="pBoton">Identificador del boton dentro del GridView</param>
            <param name="pMensaje">Mensaje que se desea visualizar</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConfirmarEvento(System.Web.UI.WebControls.LinkButton,System.String)">
            <summary>
            Muestra un mensaje de confirmaci√≥n sin postback para un boton de cualquier tipo
            </summary>
            <param name="pBoton">Identificador del boton</param>
            <param name="pMensaje">Mensaje que se desea visualizar</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConfirmarEvento(System.Web.UI.WebControls.Button,System.String)">
            <summary>
            Muestra un mensaje de confirmaci√≥n sin postback para un boton de cualquier tipo
            </summary>
            <param name="pBoton">Identificador del boton</param>
            <param name="pMensaje">Mensaje que se desea visualiza</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConfirmarEventoMaster(System.String,System.String)">
            <summary>
            Muestra un mensaje de confirmaci√≥n sin postback para un boton de cualquier tipo
            </summary>
            <param name="pBoton">Identificador del boton</param>
            <param name="pMensaje">Mensaje que se desea visualiza</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ValidarCaracteresRadioButon(System.String)">
            <summary>
            Devuelce de una letra La palabra completa 
            para los detalles de las Paginas
            </summary>
            <param name="iCrter">
             Toma Valor S - N
            </param>
            <returns>Devuelve el Valor de S o N</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.MensajeControlado(System.String)">
            <summary>
            Mensaje Controlado
            </summary>
            <param name="pCodigo">Codigo Mensaje</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.MensajeControlado(System.String,System.String,System.String)">
            <summary>
            Mensaje Controlado concatenando dos mensajes, Mesaje A + Texto + Mensaje B
            </summary>
            <param name="pCodigoInicio">Codigo Mensaje Inicial</param>
            <param name="pCadena">Mensaje Cadena</param>
            <param name="pCodigoFin">Codigo Mensaje Final</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.GenerarImagenAleatoria">
            <summary>
            Funcion para Generar Imagen
            </summary>
            <returns>Retorna Imanegn</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.RutaImagenAleatoriaVirtual">
            <summary>
            Funcion Utilizada para obtener ruta imagen virtual
            </summary>
            <returns>Ruta</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.RutaImagenImagenDefault">
            <summary>
            Funcion Utilizada para obtener ruta imagen por defecto Empresas Usuarios.
            </summary>
            <returns>Ruta</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerContSessiones">
            <summary>
            Obtenero si el sistema controla sessiones
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerModoWind">
            <summary>
            Obtenero si utiliza autenticacion modo windows
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerModoWindLDAP">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerLDAPDominio">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP Dominio
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerLDAPUsuario">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP Usuarios
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObteneLDAPClave">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP Clave
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.GenerarCodigo(System.Int32)">
            <summary>
            Funcion Utilizada para generar codigo aleatorio
            </summary>
            <param name="pCantidad">Cantidad de Carateres</param>
            <returns>Codigo</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.GenerarImgValidador(System.String)">
            <summary>
            Funcion Utilizada para Generar Imagen de Validacion
            </summary>
            <param name="pCodigoChequeo">Codigo de Imagen</param>
            <returns>Nombre Imagen</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ValidarBotonesMaster(System.Web.UI.WebControls.Panel,System.String,System.String,System.String)">
            <summary>
            Funcion Utilizada para activar o desactivar los botones de la mastre segun los permisos.
            </summary>
            <param name="pPanel">Panel de Botones</param>
            <param name="pBoton">Boton</param>
            <param name="pPermiso">Permiso</param>
            <param name="pImagen">Imagen</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerParametros(System.String[])">
            <summary>
            Obitiene un string de los pararmetros para enviar por URL
            </summary>
            <param name="pParametros">Arreglo con las llaves enviadas por URL</param>
            <returns>string concatenado con los parametros y valores para enviar por URL</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerParametros(Ophelia.Proteccion.QueryString,Ophelia.Proteccion.QueryString)">
            <summary>
            Obitiene un string de los pararmetros para enviar por URL
            </summary>
            <param name="pQueryStringActual">Arreglo con las llaves enviadas por URL Actual</param>
            <param name="pQueryStringNuevo">Arreglo con las llaves enviadas por URL Nuevo</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.RemoveObjetoSession(System.String)">
            <summary>
            Funcion utilizada para Remover Objetos de Session
            </summary>
            <param name="pSession"></param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConstruirControles(System.Data.DataTable)">
            <summary>
            Obtiene un conjunto de controles tipo label textbox
            </summary>
            <param name="dtDatos">Conjunto de atributos con los cuales se crean los controles</param>
            <returns>Arreglo de controles creados</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConstruirPagina(System.Web.UI.Control[0:,0:],System.Web.UI.WebControls.PlaceHolder)">
            <summary>
            Construye todos los controles de la p√°gina automaticamente
            </summary>
            <param name="arControles">Conjunto de controles a crear</param>
            <param name="phConsulta">Contenedor en el cual se crean los controles</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerCadenaConsulta(System.Data.DataTable)">
            <summary>
            Obtiene la cadena SQL a partir del WHERE con los valores ingresados y validados
            </summary>
            <param name="dtDatos">Conjunto de atributos y valores con los cuales se va a crear la cadena</param>
            <returns>Cadena SQL obtenida</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConstruirPaginaConsulta(System.Web.UI.Control[0:,0:],System.Web.UI.WebControls.PlaceHolder)">
            <summary>
            Construye todos los controles de la p√°gina automaticamente
            </summary>
            <param name="arControles">Conjunto de controles a crear</param>
            <param name="phConsulta">Contenedor en el cual se crean los controles</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ValidarPaginaConsulta(System.Web.UI.WebControls.PlaceHolder)">
            <summary>
            Valida que los valores dentro de los cajas de texto contengan caracteres validos
            </summary>
            <param name="phConsulta">Control que contiene las cajas de texto</param>
            <returns>Valor booleano con el estado de los campos</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CargarParametrosConsulta(System.Web.UI.WebControls.PlaceHolder,System.Web.UI.WebControls.Label)">
            <summary>
            CArga los parametros digitados en la consulta
            </summary>
            <param name="pPhControles">Control que contiene los componentes a cargar</param>
            <param name="pLblPagina">Nombre del programa</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.GuardarParametrosConsulta(System.Web.UI.WebControls.PlaceHolder,System.Web.UI.WebControls.Label)">
            <summary>
            Guarda los parametros digitados en la consulta
            </summary>
            <param name="pPhControles">Control que contiene los componentes a guardar</param>
            <param name="pLblPagina">Nombre del programa</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.LimpiarComponentes(System.Web.UI.WebControls.PlaceHolder,System.Web.UI.WebControls.Panel)">
            <summary>
            Limpia el contenido de los componentes de un placeholder
            </summary>
            <param name="pPhComponentes">Componente que contiene los controles a limpiar</param>
            <param name="pPanelError">Componete de mensaje de error</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.LimpiarComponentes(System.Web.UI.Page,System.Web.UI.WebControls.Panel)">
            <summary>
            Limpia el contenido de los componentes de una pagina
            </summary>
            <param name="pPagina">Pagina</param>
            <param name="pPanelError">Panel de errores</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.FormatoFechaSistema(System.String)">
            <summary>
            Transforma una fecha de una formato espesifico a un formato fecha
            El formato espesifico lo lee de el web.config
            </summary>
            <param name="pFecha">Fecha en el formato espesifico</param>
            <returns>fecha en el formato del sistema</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ValidarEstructuraCadena(System.String)">
            <summary>
            Valida si la cadena ingresada tiene una estructura aceptable apra ser utilizada
            </summary>
            <param name="pCadena">cadena de texto a evaluar</param>
            <returns>Valor booleano del estado de la cadena</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ValidarCadena(System.String)">
            <summary>
            Valida si los caracteres de una cadena de texto son validos
            </summary>
            <param name="pCadena">cadena de texto a evaluar</param>
            <returns>valor booleano del estado de la cadena</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ValidarCadena(System.String,System.String)">
            <summary>
            Valida si los caracteres de una cadena de texto son validos
            </summary>
            <param name="pCadena">cadena de texto a evaluar</param>
            <param name="pComponete">Text del componete para el mensaje</param>
            <returns>valor booleano del estado de la cadena</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.VisualizarAuditoria(System.Web.UI.MasterPage,System.String,System.DateTime,System.String,System.DateTime)">
            <summary>
            Funcion Utilizada para Mostrar la Auditoria del Sistema
            </summary>
            <param name="pMaster">Pagina Maestra</param>
            <param name="pUsuarioCrea">Usuario Crea</param>
            <param name="pFechaCrea">Fecha Crea</param>
            <param name="pUsuarioMod">Usuario Modifica</param>
            <param name="pFechaMod">Fecha Modifica</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.VisualizarAuditoria(System.Web.UI.MasterPage,System.String,System.DateTime,System.String)">
            <summary>
            Funcion Utilizada para Mostrar la Auditoria del Sistema
            </summary>
            <param name="pMaster">Pagina Maestra</param>
            <param name="pAct_Usua">Usario</param>
            <param name="pAct_Hora">Fecha</param>
            <param name="pAct_Esta">Estado</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConfirmarEvento(System.String,System.String)">
            <summary>
            Muestra un mensaje de confirmaci√≥n sin postback para un boton de cualquier tipo
            </summary>
            <param name="pBoton">Identificador del boton</param>
            <param name="pMensaje">Mensaje que se desea visualiza</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.IluminarBotones(System.String)">
            <summary>
            Cadena JavaScrpit para iluminar los botones
            </summary>
            <param name="pTd">tag que se desea iluminar</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CrearEventoCliente(System.Web.UI.WebControls.LinkButton,System.String)">
            <summary>
            Crea un evento de cliente para un linkButton abriendo una ventana en modo pop up
            </summary>
            <param name="pBoton">Control al que se desea crear el evento</param>
            <param name="pUrl">Direcci√≥n a la cual se debe dirigir el evento</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CrearEventoCliente(System.Web.UI.WebControls.GridViewRowEventArgs,System.String,System.String,System.String,System.String)">
            <summary>
            Crea un evento de cliente para un linkButton abriendo una ventana en modo pop up
            </summary>
            <param name="e">Evento Grilla</param>
            <param name="pBoton">Control al que se desea crear el event</param>
            <param name="pUrl">Direcci√≥n a la cual se debe dirigir el evento</param>
            <param name="pAncho">Ancho de la ventana pop up</param>
            <param name="pAlto">Alto de la ventana pop up</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CrearEventoCliente(System.Web.UI.WebControls.LinkButton,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Crea un evento de cliente para un linkButton abriendo una ventana en modo pop up
            </summary>
            <param name="pBoton">Control al que se desea crear el event</param>
            <param name="pUrl">Direcci√≥n a la cual se debe dirigir el evento</param>
            <param name="pAncho">Ancho de la ventana pop up</param>
            <param name="pAlto">Alto de la ventana pop up</param>
            <param name="pCambiarTama√±o">True o False para permitir modificar el tama√±o del pop</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.InitializeCulture">
            <summary>
            Gestiona los idiomas de la aplicacion
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConcatenarColumnas(System.Data.DataSet,System.Int32[],System.String)">
            <summary>
            Concatena columnas de un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea concatenar columnas</param>
            <param name="pCampos">Conjunto de numeros correspondientes a las columnas que desea concatenar en el DataSet</param>
            <param name="pNombreColumna">Nombre que tendra la columna concatenada</param>
            <returns>DataSet con la columna nueva concatenada</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConcatenarColumnas(System.Data.DataSet,System.String[],System.String)">
            <summary>
            Concatena columnas de un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea concatenar columnas</param>
            <param name="pCampos">Conjunto de nombres correspondientes a las columnas que desea concatenar en el DataSet</param>
            <param name="pNombreColumna">Nombre que tendra la columna concatenada</param>
            <returns>DataSet con la columna nueva concatenada</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConcatenarColumnas(System.Data.DataSet,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Concatena dos columnas con un separador de un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea concatenar columnas</param>
            <param name="pPrimerCampo">Indice de la primera columna</param>
            <param name="pSegundoCampo">Indice de la segunda columna</param>
            <param name="pSeparador">Caracter separador</param>
            <param name="pNombreColumna">Nombre que tendra la columna concatenada</param>
            <returns>DataSet con la columna nueva concatenada</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConcatenarColumnas(System.Data.DataSet,System.String,System.String,System.String,System.String)">
            <summary>
            Concatena dos columnas con un separador de un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea concatenar columnas</param>
            <param name="pPrimerCampo">Indice de la primera columna</param>
            <param name="pSegundoCampo">Indice de la segunda columna</param>
            <param name="pSeparador">Caracter separador</param>
            <param name="pNombreColumna">Nombre que tendra la columna concatenada</param>
            <returns>DataSet con la columna nueva concatenada</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ConcatenarColumnas(System.Data.DataSet,System.String,System.String,System.String)">
            <summary>
            Concatena una columnas con un valor de un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea concatenar columnas</param>
            <param name="pPrimerCampo">Indice de la primera columna</param>
            <param name="pValorAdd">Valor a concaternar</param>
            <param name="pNombreColumna">Nombre que tendra la columna concatenada</param>
            <returns>DataSet con la columna nueva concatenada</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CambiarValoresColumna(System.Data.DataSet,System.Int32,System.Int32,System.String)">
            <summary>
            Cambia los valores de una columna por los nombre de una lista estatica
            </summary>
            <param name="dsDatos">DataSet del cual se quiere cambiar la columna</param>
            <param name="pColumna">Numero de columna con base cero</param>
            <param name="pIdListaEstatica">Identificador de la lista estatica</param>
            <param name="pNombreColumna">Nombre de la columna que se crea</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CambiarValoresColumna(System.Data.DataSet,System.String,System.Int32,System.String)">
            <summary>
            Cambia los valores de una columna por los nombre de una lista estatica
            </summary>
            <param name="dsDatos">DataSet del cual se quiere cambiar la columna</param>
            <param name="pColumna">Numero de columna con base cero</param>
            <param name="pIdListaEstatica">Identificador de la lista estatica</param>
            <param name="pNombreColumna">Nombre de la columna que se crea</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.EliminarHoraFecha(System.Data.DataSet,System.String,System.Int32)">
            <summary>
            Elimina la hora de una columna de tipo fecha en un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea eliminar la hora de una columna de tipo fecha</param>
            <param name="pNombreCampoFecha">Nombre que tendra la columna nueva sin la hora</param>
            <param name="pPosicionCampoFecha">Ubicacion de la columna de tipo fecha en el DataSet</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.EliminarHoraFecha(System.Data.DataSet,System.String,System.String)">
            <summary>
            Elimina la hora de una columna de tipo fecha en un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea eliminar la hora de una columna de tipo fecha</param>
            <param name="pNombreCampoFecha">Nombre que tendra la columna nueva sin la hora</param>
            <param name="pPosicionCampoFecha">Ubicacion de la columna de tipo fecha en el DataSet</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.EliminarHoraFechaSinAno(System.Data.DataSet,System.String,System.String,System.String)">
            <summary>
            Elimina el a√±o y la hora de una columna de tipo fecha en un DataSet y se la adiciona al mismo DataSet de entrada
            </summary>
            <param name="dsDatos">DataSet al cual se desea eliminar la hora de una columna de tipo fecha</param>
            <param name="pNombreCampoFecha">Nombre que tendra la columna nueva sin la hora</param>
            <param name="pPosicionCampoFecha">Ubicacion de la columna de tipo fecha en el DataSet</param>
            <param name="pIdioma">Idioma del usuario logeado</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerFormatoHora(System.DateTime)">
            <summary>
            Obtiene la hora en formato de 24 horas
            </summary>
            <param name="pHora">Hora</param>
            <returns>Cadena de texto con la hora en el formato de 24 horas</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CambiarVacio(System.Web.UI.WebControls.ContentPlaceHolder)">
            <summary>
            Cambia los labels vacios por un simbolo
            </summary>
            <param name="pChPagina">Control Web sobre el cual busca los controles</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.AsignarFoto(System.Web.UI.WebControls.FileUpload,System.Web.UI.WebControls.Image,System.Web.UI.WebControls.Unit)">
            <summary>
            Previsauliza la imagen buscada
            </summary>
            <param name="pArchivo">Control de busqueda de archivos</param>
            <param name="pImagen">Control para visualizar imagen</param>
            <param name="pAlto">Alto de la imagen</param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CerrarVentana">
            <summary>
            Metodo utilizado para cerrar las ventanas pop del sistema
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.VisualizarCrearRapido(System.String)">
            <summary>
            Metodo utilizado para visualizar los crear rapipdo
            </summary>
            <param name="pEditar">Valor de edicion S/N</param>
            <returns>true o false</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ObtenerPermiso(System.Int64,System.String)">
             <summary>
            Metodo utilizado para validar acceso a programas
             </summary>
             <param name="pTiu_iden">Id del tipo de usuario</param>
             <param name="pOpc_codi">codigo de opcion</param>
             <returns>S con permiso o N sin permiso </returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.FormatoFechaLista(System.String)">
            <summary>
            Identifica el formato, con el cual se va a mostrar la fecha
            </summary>
            <param name="pValor">Fecha a modificar</param>
            <returns>Fecha con el formato deseado</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.FormatoFechaListaSinAno(System.String,System.String)">
            <summary>
            Identifica el formato, con el cual se va a mostrar la fecha y lo retorna sin el a√±o
            </summary>
            <param name="pValor">Fecha guardada en BD</param>
            <param name="pIdioma">Idioma del usuario logeado</param>
            <returns>Fecha modificada con formato deseado y sin a√±o</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.IdiomaMes(System.Int32,System.String)">
            <summary>
            Cambia el numero de mes por un nombre
            </summary>
            <param name="pMes">Mes</param>
            <param name="pIdioma">Idioma</param>
            <returns>Retorna las 3 primeras letras del Mes, en el idioma del usuario</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.CadenaConsultaDefinitiva(System.String)">
            <summary>
            Modifica la cadena de consulta cambiando los * por valores %
            </summary>
            <param name="pCadena">Cadena con *</param>
            <returns>Cadena con %</returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.PaginaInicioScript">
            <summary>
            Metodo utilizado para obtener evento javaScrip para redireccionar a la pagina de inicio
            si la sesion esta muerta.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.ExportarExcel(System.Web.UI.WebControls.GridView,System.String)">
            <summary>
            Metodo Utilizado para Exportar un Grid View a excel
            </summary>
            <param name="pGridView">Objeto GridView</param>
            <param name="pNombreArchivo">Nombre del Archivo </param>
        </member>
        <member name="M:Ophelia.Ancestros.OCTRAGn.PrepararControlParaExportar(System.Web.UI.Control)">
            <summary>
            Metodo utilizado para preparar el GridView para ser exportado a excel
            </summary>
            <param name="pControl">Control</param>
        </member>
        <member name="T:Ophelia.Ancestros.OBDAGn">
            <summary>
            Clase BD Ancestro
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OBDAGn.BOException">
            <summary>
            Objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OBDAGn.BParamXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OBDAGn.#ctor">
            <summary>
            Constructor del BO abstracto
            </summary>
        </member>
        <member name="T:Ophelia.Ancestros.OBOAGn">
            <summary>
            Clase BO Ancestro
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OBOAGn.BOException">
            <summary>
            Objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OBOAGn.BParamXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OBOAGn.#ctor">
            <summary>
            Constructor del BO abstracto
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OBOAGn.ValidarRangoHoras(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Funcion utilizada para validad un rango de horas
            </summary>
            <param name="pHoraInicial">Hora Inicial</param>
            <param name="pMinInicial">Minuto Inicial</param>
            <param name="pHoraFinal">Hora Final</param>
            <param name="pMinFinal">Minuto Final</param>
        </member>
        <member name="M:Ophelia.Ancestros.OBOAGn.DiaSemana(System.DateTime)">
            <summary>
            Funcion Utilizada para Mostrar el dia de la semana en letras.
            </summary>
            <param name="pValor">Fecha</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Ancestros.ODAOAGn">
            <summary>
            Clase SF Ancestro
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.ODAOAGn.BOException">
            <summary>
            objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.ODAOAGn.oParameter">
            <summary>
            objeto de parametros de Base de Datos
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.ODAOAGn.oListaObjectReturn">
            <summary>
             Objeto de Generic de retorno de valores de tipo ObjectReturn
            </summary>                                          
        </member>
        <member name="F:Ophelia.Ancestros.ODAOAGn.listAux">
            <summary>
             Objeto de Parameter de tipo Parameter
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.ODAOAGn.paramXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.ODAOAGn.sql">
            <summary>
            SQL
            </summary>
        </member>
        <member name="P:Ophelia.Ancestros.ODAOAGn.vMaximoDataset">
            <summary>
            Valor Maximo Dataset 
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.ODAOAGn.#ctor">
            <summary>
            Constructor del BO abstracto
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.ODAOAGn.ObtenerNumeroRegistros(System.String,System.String,System.Nullable{System.Int32},Ophelia.OTOContext,System.String)">
            <summary>
            
            </summary>
            <param name="pConsulta">Conualta</param>
            <param name="pEntidad">Entidad</param>
            <param name="pCodigoEmpresa">Codigo Empresa</param>
            <param name="pTOContext">TOContext</param>
            <param name="pEmpresa">Campo Codigo Empresa del sistema</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Ancestros.ODAOAGn.ObtenerSiguienteId(System.String,System.String,System.Nullable{System.Int32},System.String,Ophelia.OTOContext,System.String)">
            <summary>
            
            </summary>
            <param name="pEntidad">Entidad</param>
            <param name="pNombreCampo">Nombre</param>
            <param name="pCodigoEmpresa">Codigo Empresa</param>
            <param name="pCondiciones">Condiciones</param>
            <param name="pTOContext">TOContex</param>
            <param name="pEmpresa">Campo Codigo Empresa del sistema</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Ancestros.OSFAGn">
            <summary>
            Clase SF Ancestro
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OSFAGn.BOException">
            <summary>
            objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Ancestros.OSFAGn.BParamXML">
            <summary>
            bjeto para la lectura del XML
            </summary>
        </member>
        <member name="M:Ophelia.Ancestros.OSFAGn.#ctor">
            <summary>
            Constructor del BO abstracto
            </summary>
        </member>
        <member name="T:Ophelia.Comun.General">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.General.Compress(System.Byte[])">
            <summary>
            Compressing ViewState Compression
            </summary>
            <param name="data">Data</param>
            <returns>Data</returns>
        </member>
        <member name="M:Ophelia.Comun.General.Decompress(System.Byte[])">
            <summary>
            Decompressing ViewState Compression
            </summary>
            <param name="data">Data</param>
            <returns>Data</returns>
        </member>
        <member name="T:Ophelia.Comun.LetasNumeros">
            <summary>
            permite convertir numeros en letras
            </summary>
        </member>
        <member name="M:Ophelia.Comun.LetasNumeros.NumeroALetras(System.String,System.String,System.String)">
            <summary>
            moneda es el tipo de moneda si no se requiere se deja en blanco, 
            mon_camo es el nombre al final por ejemplo m/cte
            </summary>
            <param name="num">numero a convertir</param>
            <param name="moneda">moneda</param>
            <param name="mon_camo">m/cte</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Comun.Lupas.FormatColumnaLupa">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.FormatColumnaLupa.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.FormatColumnaLupa.HorizontalAling">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.FormatColumnaLupa.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="format"></param>
        </member>
        <member name="M:Ophelia.Comun.Lupas.FormatColumnaLupa.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="format"></param>
            <param name="horizontalAling"></param>
        </member>
        <member name="T:Ophelia.Comun.Lupas.ColumnasQBE">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.ColumnasQBE.Descripcion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.ColumnasQBE.Criterio">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.ColumnasQBE.Tipo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.ColumnasQBE.Nombre">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ophelia.Comun.Lupas.Comparador">
            <summary>
              Comparador
            </summary>
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.GREATER">
            <summary>
              GREATER
            </summary>
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.EQUALS">
            <summary>
                EQUALS
            </summary>
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.GREATEREQUAL">
            <summary>
               GREATEREQUAL
            </summary>  
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.LESS">
            <summary>
                LESS
            </summary>
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.LESSEQUAL">
            <summary>
              LESSEQUAL
            </summary>
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.LIKE">
            <summary>
               LIKE
            </summary>
        </member>
        <member name="F:Ophelia.Comun.Lupas.Comparador.NOTEQUAL">
            <summary>
             NOTEQUAL
            </summary>
        </member>
        <member name="T:Ophelia.Comun.Lupas.CriterioLupa">
            <summary>
              CriterioLupa
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.CriterioLupa.#ctor(System.Object,System.String)">
            <summary>
                CriterioLupa
            </summary>
            <param name="_valor">object</param>
            <param name="_compara">string</param>
        </member>
        <member name="P:Ophelia.Comun.Lupas.CriterioLupa.Compara">
            <summary>
              Compara
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.CriterioLupa.Valor">
            <summary>
             Valor
            </summary>
        </member>
        <member name="T:Ophelia.Comun.Lupas.EstructGridLupa">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.EstructGridLupa.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ophelia.Comun.Lupas.LabelColumnLupa">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.LabelColumnLupa.Name">
            
        </member>
        <member name="P:Ophelia.Comun.Lupas.LabelColumnLupa.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.LabelColumnLupa.Format">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.LabelColumnLupa.HorizontalAling">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.LabelColumnLupa.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="width"></param>
        </member>
        <member name="M:Ophelia.Comun.Lupas.LabelColumnLupa.#ctor(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="width"></param>
            <param name="format"></param>
        </member>
        <member name="M:Ophelia.Comun.Lupas.LabelColumnLupa.#ctor(System.String,System.Int32,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="width"></param>
            <param name="format"></param>
            <param name="horizontalAling">NotSet = 0, Left = 1, Center = 2, Right = 3, Justify = 4,</param>
        </member>
        <member name="T:Ophelia.Comun.Lupas.OrdenLupa">
            <summary>
            Clase Orden Lupa
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.OrdenLupa.Columna">
            <summary>
            Columna
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.OrdenLupa.TipoOrden">
            <summary>
            Tipo Oden
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.OrdenLupa.#ctor(System.String,System.String)">
            <summary>
            Orden Lupa
            </summary>
            <param name="_tipo_orden">Tipo Orden</param>
            <param name="_columna">Columna</param>
        </member>
        <member name="T:Ophelia.Comun.Lupas.SelectColumnLupa">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.SelectColumnLupa.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.SelectColumnLupa.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Ophelia.Comun.Lupas.VisibleColumnLupa">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.Lupas.VisibleColumnLupa.Visible">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Lupas.VisibleColumnLupa.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="visible"></param>
        </member>
        <member name="T:Ophelia.Comun.ExporToPDFOphelia">
            <summary>
            ExporToPDFOphelia
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDFOphelia.#ctor">
            <summary>
            ExporToPDFOphelia USO SELFSERVICE KACTUS HCM
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OMargen">
            <summary>
            Tama√±o Margen General
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OConvertHtmlCode">
            <summary>
            Convert HTML Code H Url U Local L
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirma">
            <summary>
            Requiere Firma Digital (Solo funciona si el parametro OConvertHtmlCode esta en "L")
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OEpfNomArch">
            <summary>
            Nombre Archivo *.epf
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OEpfCla">
            <summary>
            Clave Archivo *.epf
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OUrl">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OHtmlCode">
            <summary>
            Html
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.Oruta">
            <summary>
            Ruta Web.Config 
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OrutaPDF">
            <summary>
             Ruta Web.Config 
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OImgFondoPDF">
            <summary>
            Imagen de Fondo PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OBaseUrl">
            <summary>
            Base URL 
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPageSizes">
            <summary>
            Page Size Letter Legal
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPageOrientations">
            <summary>
            Page Orientation Vertical V Horizontal H
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OBrowserWidth">
            <summary>
            Browser Width
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OHtmlTimeout">
            <summary>
            Load HTML Timeout
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OTriggeringMode">
            <summary>
            Triggering Mode
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OWaitTime">
            <summary>
            Wait Time
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OAddHeader">
            <summary>
            Add Header
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OAddFooter">
            <summary>
            Add Footer
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFontEmbedding">
            <summary>
            Font Embedding
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPdfA">
            <summary>
            PDF/A
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OOpenInline">
            <summary>
            Open PDF document inline in browser
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OOpenPassword">
            <summary>
            Set Open Password
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OAllowPrinting">
            <summary>
            Allow Printing
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPdfNombre">
            <summary>
            Nombre Archivo PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.ORutaArchivoPDF">
            <summary>
            Ruta de Generacion de los archivo PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.ORutaEjecutaFirmaPDF">
            <summary>
            Ruta del ejecutable para firma de los archivo PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OOutputFile">
            <summary>
            Nombre Archivo PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OOutputFileFirma">
            <summary>
            Nombre Archivo PDF Firmado Si OFirmaX509 = true
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirmarX509FirExe">
            <summary>
            Ruta donde se encuentra el programa de Firma Exe para X509
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPdfAutor">
            <summary>
            Autor PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPdfKeywords">
            <summary>
            Pdf Keywords
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPdfTitle">
            <summary>
            Pdf Title
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPdfSubject">
            <summary>
            Pdf Subject
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OEpfBat">
            <summary>
            Ruta Donde Se Encuentran el archivo BAT Para Firma por EPF
            @"C:\OFirma_PDF.Bat"
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirmaX509">
            <summary>
            Parametro para firmar documentos mediante X509
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirmarX509Visible">
            <summary>
            Parametro para ver la firmar en el documentos mediante X509
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirmarX509Location">
            <summary>
            Parametro para incluir ubicaci√≥n por defecto esta 'Colombia'
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirmarX509Reason">
            <summary>
            Parametro para incluir razon por defecto esta 'Firma Digital de Documento'
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFirmarX509IDCert">
            <summary>
            Serial Number del Certificado X509
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OAddRutaImg">
            <summary>
            Ruta Imagen Pie de Pagina
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OSpecificMargins">
            <summary>
            Margenes Especificas
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OLeftMargin">
            <summary>
            Margen Izquierdo
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.ORightMargin">
            <summary>
            Margen Derecha
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OTopMargin">
            <summary>
            Margen Superior
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OBoottomMargin">
            <summary>
            Margen Inferior
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OFooterHeight">
            <summary>
            Margen Inferior
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OMarcaAgua">
            <summary>
            Atributo Marca de Agua
            </summary>
        </member>
        <member name="P:Ophelia.Comun.ExporToPDFOphelia.OPDFByte">
            <summary>
            PDF en Byte[]
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDFOphelia.OExportar">
            <summary>
            Exportar
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDFOphelia.OFirmarDocumentoEPF(System.String,System.String,System.String)">
            <summary>
            Firmar Documentos con ficheros epf
            </summary>
            <param name="pEpf">Nombre Archivo EPF </param>
            <param name="pClave"></param>
            <param name="pPDF"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDFOphelia.OFirmarDocumentoX509(System.String,System.String)">
            <summary>
            Firma de PDF con certificados X509
            </summary>
            <param name="pPDF">Archivo PDF a ser Firmado</param>
            <param name="pPDFFirma">Archivo PDF destino Firmado</param>
            <returns>True o False de Operacion</returns>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDFOphelia.ExportarHtmlToPDF">
            <summary>
            Exportar PDF Simple Local
            </summary>
        </member>
        <member name="T:Ophelia.Comun.TOExporToPDF">
            <summary>
             TOExporToPDF
            </summary>
        </member>
        <member name="M:Ophelia.Comun.TOExporToPDF.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPdfA">
            <summary>
            Usar estandar PDF/A-1
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OSpecificMargins">
            <summary>
            Margenes Especificas
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OFontEmbedding">
            <summary>
            Usar Font Embedding
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OTriggeringMode">
            <summary>
            Tipo de Carga 
            A - Auto
            W - WaitTime
            M - Manual
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OConvertHtmlCode">
            <summary>
            Tipo de Carga 
            H - HTML Buffer
            R - HTML PDF Ruta
            U - URL Buffer
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OHtmlCode">
            <summary>
            Codigo OHtmlCode
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OBaseUrl">
            <summary>
            OBaseUrl
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OOutputFile">
            <summary>
             OOutputFile Ruta de Salide con nombre y extencion del PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OURLToPDF">
            <summary>
            URl a transformar en PDF
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPageSizes">
            <summary>
            OPageSizes Tipo Pagina 
            "A0"
            "A1"
            "A10"
            "A2"
            "A3"
            "A4"
            "A5"
            "A6"
            "A7"
            "A8"
            "A9"
            "ArchA"
            "ArchB"
            "ArchC"
            "ArchD"
            "ArchE"
            "B0"
            "B1"
            "B2"
            "B3"
            "B4"
            "B5"
            "Flsa"
            "HalfLetter"
            "Ledger"
            "Legal"
            "Letter"
            "Letter11x17"
            "Note"
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OLeftMargin">
            <summary>
            Margen para pdf Left
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.ORightMargin">
            <summary>
            Margen para pdf Right
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OTopMargin">
            <summary>
            Margen para pdf Top
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OBottomMargin">
            <summary>
            Margen para pdf Bootom
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPdfBuffer">
            <summary>
             PdfBuffer
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPdfAutor">
            <summary>
              PdfAutor
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPdfKeywords">
            <summary>
             OPdfKeywords
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPdfSubject">
            <summary>
            OPdfSubject
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPdfTitle">
            <summary>
            OPdfTitle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OOpenPassword">
            <summary>
            OOpenPassword
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OAllowPrinting">
            <summary>
            OAllowPrinting
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OPageOrientations">
            <summary>
            V Vertical
            </summary>
        </member>
        <member name="P:Ophelia.Comun.TOExporToPDF.OMarcaAgua">
            <summary>
            Atributo Marca de Agua
            </summary>
        </member>
        <member name="T:Ophelia.Comun.ExporToPDF">
            <summary>
            ExporToPDFOphelia
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDF.#ctor">
            <summary>
            ExporToPDFOphelia
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDF.OExportar(Ophelia.Comun.TOExporToPDF)">
            <summary>
            Exportar
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDF.OFirmarDocumentoEPF(System.String,System.String,System.String)">
            <summary>
            Firmar Documentos con ficheros epf
            </summary>
            <param name="pEpf">Nombre Archivo EPF </param>
            <param name="pClave"></param>
            <param name="pPDF"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.ExporToPDF.OFirmarDocumentoX509(System.String,System.String)">
            <summary>
            Firma de PDF con certificados X509
            </summary>
            <param name="pPDF">Archivo PDF a ser Firmado</param>
            <param name="pPDFFirma">Archivo PDF destino Firmado</param>
            <returns>True o False de Operacion</returns>
        </member>
        <member name="T:Ophelia.Comun.SeparadorExpresiones">
            <summary>
             SeparadorExpresiones
            </summary>
        </member>
        <member name="M:Ophelia.Comun.SeparadorExpresiones.SeparateExpresions(System.String,System.Char,System.Boolean,System.Boolean)">
            <summary>
            Separador de expresiones por funci√≥n
            </summary>
            <param name="expresion">Expresion a evaluar para aplicar separaci√≥n</param>
            <param name="expressionSeparator">Separador de expresiones</param>
            <returns>
            Retorna un listado de tipo tupla
            Tuple(objeto1, Objeto2, Operador de expresion)
            </returns>
        </member>
        <member name="T:Ophelia.Comun.Services.ServiceWrapper`1">
            <summary>
            Devuelve la interfaz del servicio
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Ophelia.Comun.Services.ServiceWrapper`1.#ctor(System.String)">
            <summary>
            Service Wrapper
            </summary>
            <param name="bindingconfiguration">binding configuration</param>
        </member>
        <member name="P:Ophelia.Comun.Services.ServiceWrapper`1.Channel">
            <summary>
            Channel
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Services.ServiceWrapper`1.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Ophelia.Comun.Services.ServiceWrapper`1.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">disposing</param>
        </member>
        <member name="T:Ophelia.Comun.OpheliaSignature">
            <summary>
            Firma de PDF
            </summary>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.BackgroundPDF(Ophelia.Comun.SignatureTO)">
            <summary>
             Incluir Imagen de Fondo
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.BackgroundPDFByte(Ophelia.Comun.SignatureTO)">
            <summary>
             Incluir Imagen de Fondo
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.MarcaDeAgua(Ophelia.Comun.SignatureTO)">
            <summary>
            Incluid Marca de Agua
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.MarcaDeAguaByte(Ophelia.Comun.SignatureTO)">
            <summary>
            Incluid Marca de Agua
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
            <returns>Archivo Binario Modificado</returns>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.SingHereEnDocumento(Ophelia.Comun.SignatureTO)">
            <summary>
             Incluir Firma externa en PDF
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.SingHereEnDocumentoByte(Ophelia.Comun.SignatureTO)">
            <summary>
             Incluir Firma externa en PDF
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
            <returns>Archivo Binario Modificado</returns>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.StamperImagePDF(Ophelia.Comun.SignatureTO)">
            <summary>
            Estampar en un PDF una imagen
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.StamperImagePDFByte(Ophelia.Comun.SignatureTO)">
            <summary>
            Estampar en un PDF una imagen
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.SignatureEnDocumentoConLTV(Ophelia.Comun.SignatureTO)">
            <summary>
             Inlcuir Firma por Certificado PFX en PDF y Estampado Cronologico
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.SignatureEnDocumentoConLTVByte(Ophelia.Comun.SignatureTO)">
            <summary>
             Inlcuir Firma por Certificado PFX en PDF y Estampado Cronologico
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.StamperLTVPDF(Ophelia.Comun.SignatureTO)">
            <summary>
            Estampar en un PDF una imagen
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.StamperLTVPDFByte(Ophelia.Comun.SignatureTO)">
            <summary>
            Estampar en un PDF una imagen
            </summary>
            <param name="pTO">TO de Datos de Signature</param>
        </member>
        <member name="M:Ophelia.Comun.OpheliaSignature.SingHereEnDocumentoByte(System.IntPtr,System.Int32,System.Int32@,System.String,System.String,System.String,System.String,System.String,System.Byte[],System.Byte[])">
            <summary>
            Incluir Firma externa en PDF
            </summary>
            <param name="pDataIn">PDF Origen</param>
            <param name="pSize">Tamazo del Areglo PDF Origen</param>
            <param name="pDocumento">PDF Destino</param>
            <param name="pSizeOut">Tama√±o del Areglo PDF Destino</param>
            <param name="pRutaPFK"></param> 
            <param name="pClavePFX"></param>
            <param name="pMarcaAgua"></param>
            <param name="pServidorLTV"></param> 
            <param name="pgeneracion"></param> 
        </member>
        <member name="T:Ophelia.Comun.TextoControles">
            <summary>
            Clase Utilizda para textos multi lenguaje.
            </summary>
        </member>
        <member name="M:Ophelia.Comun.TextoControles.TextoControlesPagina(System.Web.UI.ControlCollection,System.String)">
            <summary>
            Funci√≥n que recorre la pagina y guarda el id del control
            y el texto para el cambio del leguaje 
            </summary>
            <param name="Controles"> Coleccion de Controles de la Pagina Opci√≥n this.Controls</param>
            <param name="TipoCPM">El tipo se Define en tres clases que son : "M"-Men√∫, "P"-Mensaje_Programa y "C"-Control</param>
        </member>
        <member name="M:Ophelia.Comun.TextoControles.InsertarDatos(System.String,System.String,System.String)">
            <summary>
            Funcion para Guardar el Id texto de un control especifico 
            para la traducci√≥n del texto de este mismo por prueba esto se Guardara en KactusDesar125
            </summary>
            <param name="idControl">Recibe el Id del control</param>
            <param name="idTextoControl">Reibe el Texto del Control</param>
            <param name="Tipo">Recibe el tipo</param>
        </member>
        <member name="M:Ophelia.Comun.TextoControles.ObtenerLLave">
            <summary>
            Obtiene un numero generado automaticamente
            </summary>
            <returns>Numero generado</returns>
        </member>
        <member name="T:Ophelia.Comun.UAnalExpr">
            <summary>
            Descripci√≥n breve de UAnalExpr
            </summary>
        </member>
        <member name="F:Ophelia.Comun.UAnalExpr.StMensajeError">
            Private declarations
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.NumToBol(System.Double)">
            <summary>
            
            </summary>
            <param name="Valor"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.EvaluaParentesis(Ophelia.Comun.UAnalExpr.RegToken,System.Int32,System.Int32,Ophelia.Comun.UAnalExpr.TipoToken)">
            <summary>
            
            </summary>
            <param name="lTipoToken"></param>
            <param name="Indice"></param>
            <param name="lTopePila"></param>
            <param name="pToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.EvaluaExpresion(Ophelia.Comun.UAnalExpr.TipoToken,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="lTipoToken"></param>
            <param name="Indice"></param>
            <param name="lTopePila"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.EvaluaLista">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.EvaluaVariable(System.String)">
            <summary>
            
            </summary>
            <param name="pCadena"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.EvaluaCaracter(System.String)">
            <summary>
            
            </summary>
            <param name="pCadena"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.EvaluaNumero(System.String)">
            <summary>
            
            </summary>
            <param name="pCadena"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.OperaLogico(System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="pOpeLogi"></param>
            <param name="pCadena"></param>
            <param name="InComparar"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.SepararOperandos(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="pCadena"></param>
            <param name="pTamano"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.Analisis">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.ReducirPila(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="Indice"></param>
            <param name="Puntero"></param>
            <param name="lTopePila"></param>
        </member>
        <member name="M:Ophelia.Comun.UAnalExpr.InsertaPila(Ophelia.Comun.UAnalExpr.RegToken)">
            <summary>
            
            </summary>
            <param name="Token"></param>
        </member>
        <member name="T:Ophelia.Comun.WebServiceGeneric">
            <summary>
            Clase Generica de Consumo de ServiosWeb
            </summary>
        </member>
        <member name="T:Ophelia.Comun.WebServiceGeneric.DelegateInvokeService">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Comun.WebServiceGeneric.ServiceType">
            <summary>
             Service Type
            </summary>
        </member>
        <member name="F:Ophelia.Comun.WebServiceGeneric.ServiceType.Traditional">
            <summary>
            Traditional = 0
            </summary>
        </member>
        <member name="F:Ophelia.Comun.WebServiceGeneric.ServiceType.WCF">
            <summary>
            WCF = 1
            </summary>
        </member>
        <member name="T:Ophelia.Comun.WebServiceGeneric.Parameter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.Parameter.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.Parameter.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.OUrl">
            <summary>
              URL de SW
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.OWebMethod">
            <summary>
            Metodo a consumir SW
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.OParameters">
            <summary>
            Objeto para envio de parametros  al Servicio Web
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.OWSServiceType">
            <summary>
             Tipo de Servicio Web
            </summary>
        </member>
        <member name="P:Ophelia.Comun.WebServiceGeneric.OWCFContractName">
            <summary>
             Nombre Contrato 
            </summary>
        </member>
        <member name="M:Ophelia.Comun.WebServiceGeneric.CreateSoapEnvelope">
            <summary>
               CreateSoapEnvelope
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.WebServiceGeneric.CreateStringParameters(System.Object)">
            <summary>
            CreateStringParameters
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.WebServiceGeneric.CreateWebRequest">
            <summary>
            Create Web Request
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.WebServiceGeneric.InvokeService">
            <summary>
            InvokeService
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.WebServiceGeneric.GetResult(System.Xml.Linq.XElement)">
            <summary>
            GetResult
            </summary>
            <param name="el"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.WebServiceGeneric.Deserialize``1(System.String)">
            <summary>
            Deserialize
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Comun.XML">
            <summary>
            Parametros de un XML
            </summary>
        </member>
        <member name="M:Ophelia.Comun.XML.#ctor">
            <summary>
            Constructor del objeto de parametros
            </summary>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerPathTemporal">
            <summary>
            Obtiene el path de ubicaci√≥n de las imagenes temporales
            </summary>
            <returns>Direccion fisica para guardar y leer las imagenes temporales</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerPathImagenDefault">
            <summary>
            Obtiene el path de ubicaci√≥n de las imagenes por defecto para Empresas o Usuarios
            </summary>
            <returns>Direccion fisica para guardar y leer las imagenes temporales</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerPathTempCar">
            <summary>
            Obtiene el path de ubicaci√≥n de las imagenes temporales para mostrar
            </summary>
            <returns>Direccion fisica para guardar y leer las imagenes temporales</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerCaracteresImgTemp">
            <summary>
            Obtiene el Cantidad de caracteres a dibujar
            </summary>
            <returns>Direccion fisica para guardar y leer las imagenes temporales</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerExtensionImg">
            <summary>
            Obtiene la extencion de las imagenes validas en el sistema/// </summary>
            <returns>Arreglo de extensiones de imagenes validas</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerWebMail">
            <summary>
            Obtiene el servidor de correos utilizado para el sistema
            </summary>
            <returns>Nombre del servidor de correos</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerPuertoMail">
            <summary>
            Obtiene el puerto de salida del servidor de correos utilizado para el sistema
            </summary>
            <returns>Puerto</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerWebUser">
            <summary>
            Obtiene el usuario del sistema para correos electronicos
            </summary>
            <returns>Nombre de usuario de correo electronico</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerWebPassword">
            <summary>
            Obtiene el password del sistema para correos electronicos
            </summary>
            <returns>Password de correo electronico</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerManejaSSL">
            <summary>
            Obtiene el password del sistema para correos electronicos
            </summary>
            <returns>Password de correo electronico</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerContSessiones">
            <summary>
            Obtenero si el sistema controla sessiones
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerModoWind">
            <summary>
            Obtenero si utiliza autenticacion modo windows
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerModoWindLDAP">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerLDAPDominio">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP Dominio
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerLDAPUsuario">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP Usuarios
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObteneLDAPClave">
            <summary>
            Obtenero si utiliza autenticacion modo windows utilizando LDAP Clave
            </summary>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerMensajeBO(System.String)">
            <summary>
            Obtiene los mensajes de error de un XML
            </summary>
            <param name="pCodigo">Codigo interno asignado al mensaje</param>
            <returns>Mensaje correspondiente al c√≥digo</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerMensajeBO(System.String,System.String,System.String)">
            <summary>
            Obtiene los mensajes de error de un XML
            </summary>
            <param name="pCodigoA">Codigo interno asignado al mensaje Inicial</param>
            <param name="pCadena">Mensaje interno</param>
            <param name="pCodigoB">Codigo interno asignado al mensaje Final</param>
            <returns>Mensaje correspondiente al c√≥digo</returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerPaginaWebActi">
            <summary>
            METODO UTILIZADO PARA OBTENER PAGINA DE ACTIVACION
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.XML.ObtenerPathTempAdju">
            <summary>
            Obtiene el path de ubicaci√≥n de los archivos temporales que se enviaran
            </summary>
            <returns>Direccion fisica para guardar y leer las archivos temporales</returns>
        </member>
        <member name="T:Ophelia.Comun.ConvierteTipos">
            <summary>
            permite convertir tipos
            </summary>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsId(System.Object,System.Int32)">
            <summary>
            Transform object into Identity data type (integer).
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultId">Optional default value is -1.</param>
            <returns>Identity value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsDecimal(System.Object,System.Decimal)">
            <summary>
            Transform object into Identity data type (integer).
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultdec">Optional default value is -1.</param>
            <returns>Identity value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsInt(System.Object,System.Int32)">
            <summary>
            Transform object into integer data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultInt">Optional default value is default(int).</param>
            <returns>The integer value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsInt16(System.Object,System.Int16)">
            <summary>
            Transform object into int16 data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultInt">Optional default value is default(int16).</param>
            <returns>The int16 value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsDouble(System.Object,System.Double)">
            <summary>
            Transform object into double data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultDouble">Optional default value is default(double).</param>
            <returns>The double value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsInt64(System.Object,System.Int64)">
            <summary>
            Transform object into Int64 data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultInt64">Optional default value is default(Int64).</param>
            <returns>The Int64 value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsString(System.Object,System.String)">
            <summary>
            Transform object into string data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultString">Optional default value is default(string).</param>
            <returns>The string value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsStringNull(System.Object,System.String)">
            <summary>
            Trasforma un valor null, en null de base datos
            </summary>
            <param name="item"></param>
            <param name="defaultString"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsDateTime(System.Object,System.DateTime)">
            <summary>
            Transform object into DateTime data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultDateTime">Optional default value is default(DateTime).</param>
            <returns>The DateTime value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsBool(System.Object,System.Boolean)">
            <summary>
            Transform object into bool data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <param name="defaultBool">Optional default value is default(bool).</param>
            <returns>The bool value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsByteArray(System.String)">
            <summary>
            Transform string into byte array.
            </summary>
            <param name="s">The object to be transformed.</param>
            <returns>The transformed byte array.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsByte(System.Object,System.Byte[])">
            <summary>
            Convierte sring a byte[]
            </summary>
            <param name="s">objeto</param>
            <param name="defaultbyte"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsBase64String(System.Object)">
            <summary>
            Transform object into base64 string.
            </summary>
            <param name="item">The object to be transformed.</param>
            <returns>The base64 string value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsBase64String(System.Data.Linq.Binary)">
            <summary>
            Transform Binary into base64 string data type. 
            Note: This is used in LINQ to SQL only.
            </summary>
            <param name="item">The object to be transformed.</param>
            <returns>The base64 string value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsBinary(System.String)">
            <summary>
            Transform base64 string to Binary data type. 
            Note: This is used in LINQ to SQL only.
            </summary>
            <param name="s">The base 64 string to be transformed.</param>
            <returns>The Binary value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsGuid(System.Object)">
            <summary>
            Transform object into Guid data type.
            </summary>
            <param name="item">The object to be transformed.</param>
            <returns>The Guid value.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.OrderBy(System.String,System.String)">
            <summary>
            Concatenates SQL and ORDER BY clauses into a single string. 
            </summary>
            <param name="sql">The SQL string</param>
            <param name="sortExpression">The Sort Expression.</param>
            <returns>Contatenated SQL Statement.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.CommaSeparate``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Takes an enumerable source and returns a comma separate string.
            Handy to build SQL Statements (for example with IN () statements) from object collections.
            </summary>
            <typeparam name="T">The Enumerable type</typeparam>
            <typeparam name="U">The original data type (typically identities - int).</typeparam>
            <param name="source">The enumerable input collection.</param>
            <param name="func">The function that extracts property value in object.</param>
            <returns>The comma separated string.</returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsFechaNumero(System.DateTime,System.Int32)">
            <summary>
            permite convertir una fecha en formato numero yyyyMMdd
            </summary>
            <param name="item">fecha de entrada</param>
            <param name="defaultInt">default 0</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Comun.ConvierteTipos.AsFoto(System.Object)">
            <summary>
            Permite combertir un campo a imagen
            </summary>
            <param name="objeto">objeto de entrada</param>
            <returns>Imagen</returns>
        </member>
        <member name="T:Ophelia.Comun.WebServiceClient">
            <summary>
            Clase Generica de Consumo de ServiosWeb
            </summary>
        </member>
        <member name="M:Ophelia.Comun.WebServiceClient.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ophelia.Comun.WebServiceClient.TipoSevicio">
            <summary>
             Enumerators de Tipo Sevicio a consumir ASM, WCF
            </summary>
        </member>
        <member name="F:Ophelia.Comun.WebServiceClient.TipoSevicio.ASMX">
            <summary>
             Consumo de servicios ASMX
            </summary>
        </member>
        <member name="F:Ophelia.Comun.WebServiceClient.TipoSevicio.WCF">
            <summary>
             Consumo de servicios WCF
            </summary>
        </member>
        <member name="F:Ophelia.Comun.WebServiceClient.TipoSevicio.Rest">
            <summary>
            Consumo de servicio Rest
            </summary>
        </member>
        <member name="M:Ophelia.Comun.WebServiceClient.ConsumoSW``1(Ophelia.Comun.WebServiceClient.TipoSevicio,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Funcion para el consumo dinamico Servicios Web 
            </summary>
            <param name="pTipoServicio"> Enumerators de Tipo Sevicio a consumir ASM, WCF </param>
            <param name="pOWebMethod">Metodo Servicio Web </param>
            <param name="pURLSW">URL Servicio Web</param>
            <param name="pWCFContractName">Contrato Usado para WCF</param>
            <param name="pParametrosSW">Parametros para envio a Servicio Web</param>
            <returns>String</returns>
        </member>
        <member name="M:Ophelia.Comun.WebServiceClient.ConsumoSW(Ophelia.Comun.WebServiceClient.TipoSevicio,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             Funcion para el consumo dinamico Servicios Web 
            </summary>
            <param name="pTipoServicio"> Enumerators de Tipo Sevicio a consumir ASM, WCF </param>
            <param name="pOWebMethod">Metodo Servicio Web </param>
            <param name="pURLSW">URL Servicio Web</param>
            <param name="pWCFContractName">Contrato Usado para WCF</param>
            <param name="getRawResult">Valor que indica si se obtiene el resultado en crudo</param>
            <param name="pParametrosSW">Parametros para envio a Servicio Web</param>
            <returns>String</returns>
        </member>
        <member name="T:Ophelia.Comun.SignatureTO">
            <summary>
            Encapsula
            </summary>
        </member>
        <member name="M:Ophelia.Comun.SignatureTO.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pRutaOrigen">
            <summary>
            Atributo Ruta Origen
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pRutaDestino">
            <summary>
            Atributo Ruta Destino
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pMarcaAgua">
            <summary>
            Atributo Marca de Agua
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pRutaOrigenByte">
            <summary>
            Atributo Ruta Origen Byte
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pObjChainX509">
            <summary>
            Atributo List Org.BouncyCastle.X509.X509Certificate
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pParamPK">
            <summary>
            Atributo ICipherParameters
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pHasAlgorit">
            <summary>
             Atributo Has Algorit
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pRason">
            <summary>
             Atributo Rason
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pLocation">
            <summary>
             Atributo Location
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pRutaImagen">
            <summary>
             Atributo Ruta Imagen
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pImagen">
            <summary>
             Atributo Imagen
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pURLServidorLTV">
            <summary>
             Atributo  URL Servidor TVL
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pLlx">
            <summary>
            Atributo  Llx - Rectangle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pLly">
            <summary>
            Atributo  Lly - Rectangle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pUrx">
            <summary>
             Atributo  Urx - Rectangle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pUry">
            <summary>
             Atributo  Ury - Rectangle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pImgx">
            <summary>
             Atributo  Urx - Rectangle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pImgy">
            <summary>
             Atributo  Ury - Rectangle
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pTama√±oImgx">
            <summary>
             Atributo  Tama√±o - Imagen
            </summary>
        </member>
        <member name="P:Ophelia.Comun.SignatureTO.pTama√±oImgy">
            <summary>
             Atributo  Tama√±o - Imagen
            </summary>
        </member>
        <member name="T:Ophelia.Controls.OTextBox">
            <summary>
            OTextBox
            </summary>
        </member>
        <member name="T:Ophelia.Controls.OGridView">
            <summary>
            Clase  OGridView Propia la cual ereda de  GridView
            </summary>
        </member>
        <member name="T:Ophelia.Controls.OGridView.HeaderFijo">
            <summary>
            HeaderFijo
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.Header">
            <summary>
              Header
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.strHeight">
            <summary>
            strHeight
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.GridHeight">
            <summary>
            GridHeight
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.SelecionarFila">
            <summary>
            Coloque true o false, si quiere selecionar desde toda la fila
            </summary>
        </member>
        <member name="T:Ophelia.Controls.OGridView.PageSizeChangeHandler">
            <summary>
            PageSizeChangeHandler
            </summary>
            <param name="s">object</param>
            <param name="e">PageSizeChangeEventArgs</param>
        </member>
        <member name="P:Ophelia.Controls.OGridView.ShowMrllCustomPaging">
            <summary>
              ShowMrllCustomPaging
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.DefaultSortExpression">
            <summary>
               DefaultSortExpression
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.CustomPagerCssClass">
            <summary>
             CustomPagerCssClass
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.PageSizeOGridView">
            <summary>
             Cantidad de Registros por pagina
            </summary>
        </member>
        <member name="P:Ophelia.Controls.OGridView.OGCulture">
            <summary>
            Coloque true o false, si quiere selecionar desde toda la fila
            </summary>
        </member>
        <member name="M:Ophelia.Controls.OGridView.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Ophelia.Controls.OGridView.OnInit(System.EventArgs)">
            <summary>
              OnInit
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Ophelia.Controls.OGridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)">
            <summary>
            OnRowCreated
            </summary>
            <param name="e">GridViewRowEventArgs</param>
        </member>
        <member name="M:Ophelia.Controls.OGridView.lnkNext_Click(System.Object,System.EventArgs)">
            <summary>
             lnkNext_Click
            </summary>
            <param name="sender">object</param>
            <param name="e">System.EventArgs</param>
        </member>
        <member name="M:Ophelia.Controls.OGridView.lnkPrev_Click(System.Object,System.EventArgs)">
            <summary>
             lnkPrev_Click
            </summary>
            <param name="sender">object</param>
            <param name="e">System.EventArgs</param>
        </member>
        <member name="M:Ophelia.Controls.OGridView.ddlFooterPager_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
               ddlFooterPager_SelectedIndexChanged
            </summary>
            <param name="sender">object</param>
            <param name="e">System.EventArgs</param>
        </member>
        <member name="T:Ophelia.Controls.ShowOGridViewPager">
            <summary>
            ShowOGridViewPager
            </summary>
        </member>
        <member name="F:Ophelia.Controls.ShowOGridViewPager.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Ophelia.Controls.ShowOGridViewPager.OnTop">
            <summary>
             OnTop
            </summary>
        </member>
        <member name="F:Ophelia.Controls.ShowOGridViewPager.OnBotton">
            <summary>
              OnBotton
            </summary>
        </member>
        <member name="F:Ophelia.Controls.ShowOGridViewPager.OnTopAndBottom">
            <summary>
              OnTopAndBottom
            </summary>
        </member>
        <member name="T:Ophelia.Controls.PageSizeChangeEventArgs">
            <summary>
            PageSizeChangeEventArgs
            </summary>
        </member>
        <member name="F:Ophelia.Controls.PageSizeChangeEventArgs.NewPageSize">
            <summary>
            NewPageSize
            </summary>
        </member>
        <member name="M:Ophelia.Controls.PageSizeChangeEventArgs.#ctor(System.Int32)">
            <summary>
               PageSizeChangeEventArgs
            </summary>
            <param name="pNewPageSize">int pNewPageSize</param>
        </member>
        <member name="P:Ophelia.Controls.OGridViewG.SelecionarFila">
            <summary>
            Coloque true o false, si quiere selecionar desde toda la fila
            </summary>
        </member>
        <member name="T:Ophelia.DataBase.DBOLEDB">
            <summary>
            Clase DB SQL
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.#ctor(System.String)">
            <summary>
            Clase DataBase Oracle
            </summary>
            <param name="pConnectionString">Cadena de Conexion</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.Read``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.Read(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.ReadList``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.ReadList(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.GetScalar(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetScalar
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.Insert(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Insert
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.Delete(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Delete
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.Update(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Update
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.GetDataSet(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetDataSet
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Dataset</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.GetStoredProcedure(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetStoredProcedure
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.SetParameters(System.Data.OleDb.OleDbCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object.
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.SetParametersSP(System.Data.OleDb.OleDbCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object. Stored Procedure
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.ReaderGenerico``1(``0,System.Data.OleDb.OleDbDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.ReaderGenerico(System.Data.OleDb.OleDbDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.ReaderGenerico``1(``0@,System.String,System.Object)">
            <summary>
                ReaderGenerico entidad T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pNombre">Nombre Objeto</param>
            <param name="pValor">pValor</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.Auditoria(Ophelia.OTOContext,System.String,System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},System.Exception)">
            <summary>
            Funcion de Auditoria
            </summary>
            <param name="pTOContext">ToContext</param>
            <param name="pSql">Sentencia SQL Ansi</param>
            <param name="pMensaje">Mensjae</param>
            <param name="pParametro">Parametros</param>
            <param name="pEx">Excepci√≥n</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOLEDB.GetParametersForLog(System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Funcion utilizara para obtener los parametros de la sentencia para el log
            </summary>
            <param name="pParametro">Parametros</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.DataBase.DBODBC">
            <summary>
            Clase DB SQL
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.#ctor(System.String)">
            <summary>
            Clase DataBase Oracle
            </summary>
            <param name="pConnectionString">Cadena de Conexion</param>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.Read``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.Read(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.ReadList``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.ReadList(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.GetScalar(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetScalar
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.Insert(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Insert
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.Delete(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Delete
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.Update(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Update
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.GetDataSet(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetDataSet
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Dataset</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.GetStoredProcedure(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetStoredProcedure
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.SetParameters(System.Data.Odbc.OdbcCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object.
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.SetParametersSP(System.Data.Odbc.OdbcCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object. Stored Procedure
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.ReaderGenerico``1(``0,System.Data.Odbc.OdbcDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.ReaderGenerico(System.Data.Odbc.OdbcDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.ReaderGenerico``1(``0@,System.String,System.Object)">
            <summary>
                ReaderGenerico entidad T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pNombre">Nombre Objeto</param>
            <param name="pValor">pValor</param>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.Auditoria(Ophelia.OTOContext,System.String,System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},System.Exception)">
            <summary>
            Funcion de Auditoria
            </summary>
            <param name="pTOContext">ToContext</param>
            <param name="pSql">Sentencia SQL Ansi</param>
            <param name="pMensaje">Mensjae</param>
            <param name="pParametro">Parametros</param>
            <param name="pEx">Excepci√≥n</param>
        </member>
        <member name="M:Ophelia.DataBase.DBODBC.GetParametersForLog(System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Funcion utilizara para obtener los parametros de la sentencia para el log
            </summary>
            <param name="pParametro">Parametros</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.DataBase.ObjectReturn">
            <summary>
            Calse para el manejo de Paraqmetros
            </summary>
        </member>
        <member name="T:Ophelia.DataBase.ObjectReturn.ODbType">
            <summary>
            Dipos de Base de datos DbType
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.AnsiString">
            <summary>
            AnsiString
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.AnsiStringFixedLength">
             <summary>
            AnsiStringFixedLength                  
             </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Binary">
            <summary>
            Binary
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Boolean">
            <summary>
             Boolean
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Byte">
            <summary>
             Byte
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Date">
            <summary>
            Date 
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.DateTime2">
            <summary>
            DateTime2
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.DateTimeOffset">
            <summary>
               DateTimeOffset
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Decimal">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Double">
            <summary>
            Double 
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Int16">
            <summary>
            Int16
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Int32">
            <summary>
            Int32
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Int64">
            <summary>
            Int64
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Object">
            <summary>
            Object
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.SByte">
            <summary>
            SByte
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.String">
            <summary>
             String
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.StringFixedLength">
            <summary>
            StringFixedLength
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.UInt16">
            <summary>
            UInt16
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.UInt32">
            <summary>
            UInt32
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.UInt64">
            <summary>
            UInt64
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.VarNumeric">
            <summary>
            VarNumeric
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.ObjectReturn.ODbType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.ObjectReturn.ParameterName">
            <summary>
            Parametro de Nombre
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.ObjectReturn.Field">
            <summary>
            Parametro de Propiedad Campo Tabla
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.ObjectReturn.Value">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.ObjectReturn.Type">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.ObjectReturn.NType">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn 
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor(System.String,System.Object)">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn 
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor(System.String,System.Object,Ophelia.DataBase.ObjectReturn.ODbType)">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn 
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pType">DBType ObjectReturn</param>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor(System.String,System.Object,System.String)">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pNType">Valor</param>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor(System.String,System.Object,System.String,System.String)">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pNType">Valor Tipo ODbType</param>
            <param name="pField">Campo Tabla</param>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor(System.String,System.Object,Ophelia.DataBase.ObjectReturn.ODbType,System.String)">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pType">Valor Tipo String</param>
            <param name="pField">Campo Tabla</param>
        </member>
        <member name="M:Ophelia.DataBase.ObjectReturn.#ctor(System.String,System.Object,System.String,Ophelia.DataBase.ObjectReturn.ODbType)">
            <summary>
            Constructor utilizada para trabajar con ObjectReturn
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pNType">Valor</param>
            <param name="pType">DBType ObjectReturn</param>
        </member>
        <member name="T:Ophelia.DataBase.DBFactory">
            <summary>
            DBFactory Clase Usada para conexion y administracion de operaciones de Multimples Bases de Datos
            SQL - ORACLE - ODBC - OLEDB
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.DBFactory.GetDB">
            <summary>
            GetDB Metodo Utilizado 
            "appSettings"
            "add key = "connectionString" value="Cadena de Conexion Segun Motor"/"
            "add key = "providerName" value="pMotor"/"
            pMotor - Motro destino
            SQL    - SQL Server
            ORA    - ORACLE
            ODB    - ODBC
            OLE    - OLEDB
            Proxima soporte para mas motores 
            Contacto de Soporte: DiegoC@digitalware.com.co
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBFactory.GetDB(Ophelia.OTOContext)">
            <summary>
            GetDB Metodo Utilizado 
            Parametro Xml ODBConfig.xml "connectionString"Cadena de Conexion"/connectionString"
            Parametro Xml ODBConfig.xml "providerName"pMotor"/providerName"
            pMotor - Motro destino
            SQL    - SQL Server
            ORA    - ORACLE
            ODB    - ODBC
            OLE    - OLEDB
            Proxima soporte para mas motores 
            Contacto de Soporte: DiegoC@digitalware.com.co
            </summary>
            <param name="pTOContext">TOContextual</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBFactory.GetDBNewDB(Ophelia.OTOContext,System.Int32)">
            <summary>
            GetDB Metodo Utilizado 
            Parametro Xml ODBConfig.xml "connectionString#"Cadena de Conexion"/connectionString#"
            Parametro Xml ODBConfig.xml "providerName#"Motor"/providerName#"
            SQL - SQL Server
            ORA - ORACLE
            ODB - ODBC
            OLE - OLEDB
            Proxima soporte para mas motores 
            Contacto de Soporte: DiegoC@digitalware.com.co
            </summary>
            <param name="pTOContext">TOContextual</param>
            <param name="pLectura">Numero que indica que parametro del XML leera "connectionString1" y "providerName1"</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBFactory.GetDB(System.String,System.String)">
            <summary>
            GetDB Metodo Utilizado 
            Tipos de Motor Actualmente Soportados para transacciones.
            pMotor - Motro destino
            SQL    - SQL Server
            ORA    - ORACLE
            ODB    - ODBC
            OLE    - OLEDB
            Proxima soporte para mas motores 
            Contacto de Soporte: DiegoC@digitalware.com.co
            </summary>
            <param name="pCadena">Cadena de Conexion segun Motro</param>
            <param name="pMotor">pMotor 3 Caracteres </param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.DataBase.DBOracle">
            <summary>
            Clase DB Oracle
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.#ctor(System.String)">
            <summary>
            Clase DataBase Oracle
            </summary>
            <param name="pConnectionString">Cadena de Conexion</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.Read``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.Read(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.ReadList``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.ReadList(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.GetScalar(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetScalar
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.Insert(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Insert
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.Delete(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Delete
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.Update(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Update
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.GetDataSet(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetDataSet
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Dataset</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.GetStoredProcedure(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetStoredProcedure
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.SetParameters(System.Data.OracleClient.OracleCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object.
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.SetParametersSP(System.Data.OracleClient.OracleCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object. Stored Procedure
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.ReaderGenerico``1(``0,System.Data.OracleClient.OracleDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.ReaderGenerico(System.Data.OracleClient.OracleDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.ReaderGenerico``1(``0@,System.String,System.Object)">
            <summary>
                ReaderGenerico entidad T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pNombre">Nombre Objeto</param>
            <param name="pValor">pValor</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.Auditoria(Ophelia.OTOContext,System.String,System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},System.Exception)">
            <summary>
            Funcion de Auditoria
            </summary>
            <param name="pTOContext">ToContext</param>
            <param name="pSql">Sentencia SQL Ansi</param>
            <param name="pMensaje">Mensjae</param>
            <param name="pParametro">Parametros</param>
            <param name="pEx">Excepci√≥n</param>
        </member>
        <member name="M:Ophelia.DataBase.DBOracle.GetParametersForLog(System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Funcion utilizara para obtener los parametros de la sentencia para el log
            </summary>
            <param name="pParametro">Parametros</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.DataBase.DBSql">
            <summary>
            Clase DB SQL
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.#ctor(System.String)">
            <summary>
            Clase DataBase Oracle
            </summary>
            <param name="pConnectionString">Cadena de Conexion</param>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.Read``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.Read(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.ReadList``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.ReadList(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.GetScalar(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetScalar
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.Insert(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Insert
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.Delete(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Delete
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.Update(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Update
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.GetDataSet(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetDataSet
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Dataset</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.GetStoredProcedure(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetStoredProcedure
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.SetParameters(System.Data.SqlClient.SqlCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object.
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.SetParametersSP(System.Data.SqlClient.SqlCommand,System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Extention method. Adds query parameters to command object. Stored Procedure
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.ReaderGenerico``1(``0,System.Data.SqlClient.SqlDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.ReaderGenerico(System.Data.SqlClient.SqlDataReader)">
            <summary>
             ReaderGenerico
            </summary>
            <param name="pReader">Reader</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.ReaderGenerico``1(``0@,System.String,System.Object)">
            <summary>
                ReaderGenerico entidad T
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pTO">Tipo T</param>
            <param name="pNombre">Nombre Objeto</param>
            <param name="pValor">pValor</param>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.Auditoria(Ophelia.OTOContext,System.String,System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},System.Exception)">
            <summary>
            Funcion de Auditoria
            </summary>
            <param name="pTOContext">ToContext</param>
            <param name="pSql">Sentencia SQL Ansi</param>
            <param name="pMensaje">Mensjae</param>
            <param name="pParametro">Parametros</param>
            <param name="pEx">Excepci√≥n</param>
        </member>
        <member name="M:Ophelia.DataBase.DBSql.GetParametersForLog(System.Collections.Generic.List{Ophelia.DataBase.Parameter})">
            <summary>
            Funcion utilizara para obtener los parametros de la sentencia para el log
            </summary>
            <param name="pParametro">Parametros</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.DataBase.IDB">
            <summary>
            Interface de Base de Datos
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.IDB.Read``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.Read(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para obtener un registro
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.ReadList``1(System.String,``0,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <typeparam name="T">Tipo de Obj</typeparam>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pTO">Funcion Para Entrelazar el generico con el Obj</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.ReadList(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
             Funcion Utilizada para obtener lista de registro
            </summary>
            <param name="pTOContext">Datos de Contexto</param>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <returns>Lista de Obj Generico</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.GetScalar(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetScalar
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.Insert(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Insert
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.Delete(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Delete
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.Update(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            Update
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Valor</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.GetDataSet(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetDataSet
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Dataset</returns>
        </member>
        <member name="M:Ophelia.DataBase.IDB.GetStoredProcedure(System.String,System.Collections.Generic.List{Ophelia.DataBase.Parameter},Ophelia.OTOContext)">
            <summary>
            GetStoredProcedure
            </summary>
            <param name="pSql">Sentencia Sql</param>
            <param name="pParms">Parametros</param>
            <param name="pTOContext">Datos de Contexto</param>
            <returns>Object</returns>
        </member>
        <member name="T:Ophelia.DataBase.GeneratorId">
            <summary>
            Objeto que genera un numero unico para utilizar en base de datos
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.GeneratorId.#ctor">
            <summary>
            Constructor del Objeto
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.GeneratorId.ObtenerLLave">
            <summary>
            Obtiene un numero generado automaticamente
            </summary>
            <returns>Numero generado</returns>
        </member>
        <member name="T:Ophelia.DataBase.Locator">
            <summary>
            Clase que obtiene la conexion a una base de datos de SQL Server 2000
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.Locator.#ctor">
            <summary>
            Clase Locator con constructor generico Lectura de Web.config
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.Locator.#ctor(Ophelia.OTOContext)">
            <summary>
             Clase Locator con constructor generico Lectura de XML parametrizado en Web.config en Parametro "sourceDB"
            </summary>
            <param name="pTOContex">TOContextual</param>
        </member>
        <member name="M:Ophelia.DataBase.Locator.#ctor(Ophelia.OTOContext,System.Int32)">
            <summary>
            Clase Locator con constructor generico Lectura de XML parametrizado en Web.config en Parametro "sourceDB" con 2 parametros
            </summary>
            <param name="pTOContex">TOContextual</param>
            <param name="pLectura">Identificador de lectura para xml</param>
        </member>
        <member name="M:Ophelia.DataBase.Locator.InsDBLocator">
            <summary>
             Devuelve o crea la instancia de la clase utilizando el patr√≥n Singleton
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DataBase.Locator.InsDBLocator(Ophelia.OTOContext)">
            <summary>
            Devuelve o crea la instancia de la clase utilizando el patr√≥n Singleton
            </summary>
            <param name="pTOContex">Requiere de TOContext</param>
            <returns>Locator</returns>
        </member>
        <member name="M:Ophelia.DataBase.Locator.InsDBLocatorCreate(Ophelia.OTOContext,System.Int32)">
            <summary>
            Crea la instancia de la clase utilizando el patr√≥n Singleton
            </summary>
            <param name="pTOContex">TOContex</param>
            <param name="pLectura">Identificador de lectura para xml</param>
            <returns>Locator</returns>
        </member>
        <member name="P:Ophelia.DataBase.Locator.motorBaseDatos">
            <summary>
            Atributo Nombre del motor Base Datos
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.Locator.ConnectionString">
            <summary>
            Funcion Utilizada para Obtener la Cadena de Conexion.
            </summary>
            <returns>Cadena de Conexion</returns>
        </member>
        <member name="P:Ophelia.DataBase.Locator.Ambiente">
            <summary>
            Funcion para Ambiente.
            </summary>
            <returns>Identificador de Ambiente</returns>
        </member>
        <member name="P:Ophelia.DataBase.Locator.Sistema">
            <summary>
            Funcion para Sistema.
            </summary>
            <returns>Identificador de Sistema</returns>
        </member>
        <member name="T:Ophelia.DataBase.Parameter">
            <summary>
            Calse para el manejo de Paraqmetros
            </summary>
        </member>
        <member name="T:Ophelia.DataBase.Parameter.ODbType">
            <summary>
            Dipos de Base de datos DbType
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.AnsiString">
            <summary>
            AnsiString
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.AnsiStringFixedLength">
             <summary>
            AnsiStringFixedLength                  
             </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Binary">
            <summary>
            Binary
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Boolean">
            <summary>
             Boolean
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Byte">
            <summary>
             Byte
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Currency">
            <summary>
            Currency
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Date">
            <summary>
            Date 
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.DateTime2">
            <summary>
            DateTime2
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.DateTimeOffset">
            <summary>
               DateTimeOffset
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Decimal">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Double">
            <summary>
            Double 
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Guid">
            <summary>
            Guid
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Int16">
            <summary>
            Int16
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Int32">
            <summary>
            Int32
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Int64">
            <summary>
            Int64
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Object">
            <summary>
            Object
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.SByte">
            <summary>
            SByte
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Single">
            <summary>
            Single
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.String">
            <summary>
             String
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.StringFixedLength">
            <summary>
            StringFixedLength
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.UInt16">
            <summary>
            UInt16
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.UInt32">
            <summary>
            UInt32
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.UInt64">
            <summary>
            UInt64
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.VarNumeric">
            <summary>
            VarNumeric
            </summary>
        </member>
        <member name="F:Ophelia.DataBase.Parameter.ODbType.Xml">
            <summary>
            Xml
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.Parameter.ParameterName">
            <summary>
            Parametro de Nombre
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.Parameter.Value">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.Parameter.Type">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.Parameter.NType">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="P:Ophelia.DataBase.Parameter.Requerido">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="M:Ophelia.DataBase.Parameter.#ctor(System.String,System.Object)">
            <summary>
            Constructor utilizada para trabajar con parametros
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
        </member>
        <member name="M:Ophelia.DataBase.Parameter.#ctor(System.String,System.Object,System.Boolean)">
            <summary>
             Constructor utilizada para trabajar con parametros
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pRequerido">Requerido</param>
        </member>
        <member name="M:Ophelia.DataBase.Parameter.#ctor(System.String,System.Object,Ophelia.DataBase.Parameter.ODbType)">
            <summary>
            Constructor utilizada para trabajar con parametros
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pObType">Valor</param>
        </member>
        <member name="M:Ophelia.DataBase.Parameter.#ctor(System.String,System.Object,System.String)">
            <summary>
            Constructor utilizada para trabajar con parametros
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pNType">Valor</param>
        </member>
        <member name="T:Ophelia.Hosvital.Comun">
            <summary>
            Hosvital Comun
            </summary>
        </member>
        <member name="T:Ophelia.Kactus.Comun">
            <summary>
            Clase Kactus Comun
            </summary>
        </member>
        <member name="M:Ophelia.Kactus.Comun.TratarClaveProgramasKactus(System.String,System.Boolean,System.String)">
            <summary>
            Metodo para tratar Clave Programas Kactus
            </summary>
            <param name="pContrase√±a"> Valor a Tratar</param>
            <param name="pEncriptado">Si se requiere Encriptada o No</param>
            <param name="pMotor">Motor 
            "SQL" = MotorBD = Motor.MSSQL;
            "ORA" = MotorBD = Motor.Oracle;
            </param>
            <returns>Valor Tratado</returns>
        </member>
        <member name="M:Ophelia.Kactus.Comun.DesempaquetarClaveProgramasKactus(System.String,System.Boolean,System.String)">
            <summary>
            Metodo para tratar Clave Programas Kactus
            </summary>
            <param name="pContrase√±a"> Valor a Tratar</param>
            <param name="pEncriptado">Si se requiere Encriptada o No</param>
            <param name="pMotor">Motor 
            "SQL" = MotorBD = Motor.MSSQL;
            "ORA" = MotorBD = Motor.Oracle;
            </param>
            <returns>Valor Tratado</returns>
        </member>
        <member name="M:Ophelia.Kactus.Comun.TratarClaveProgramasKactusInvertir(System.String,System.Boolean,System.String)">
            <summary>
            Metodo para tratar Clave Programas Kactus
            </summary>
            <param name="pContrase√±a"> Valor a Tratar</param>
            <param name="pEncriptado">Si se requiere Encriptada o No</param>
            <param name="pMotor">Motor 
            "SQL" = MotorBD = Motor.MSSQL;
            "ORA" = MotorBD = Motor.Oracle;
            </param>
            <returns>Valor Tratado</returns>
        </member>
        <member name="T:Ophelia.Kactus.Web">
            <summary>
            Clase publica de Control de aplicaciones web Kactus
            </summary>
        </member>
        <member name="F:Ophelia.Kactus.Web.BOException">
            <summary>
            Variable para el control de Excepciones o errores
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Ophelia.Kactus.Web.cadena">
            <summary>
            Cadena 
            </summary>
        </member>
        <member name="F:Ophelia.Kactus.Web.ControlBarra">
            <summary>
            Listado de Caraceres especiales validos del sistema.
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.MotorBD">
            <summary>
            Atributo Utilizado para identificar el Motor de Base de Datos Utilizado en la Conexion.
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.mensaje">
            <summary>
            Mensajes generales del sistema
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.Vapar">
            <summary>
            Valorers Tomados del Vapar
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.ACT_USUA">
            <summary>
            Usuario Auditoria de Sistemas
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.ACT_HORA">
            <summary>
            Fecha para Campo Auditoria
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.ACT_FECH">
            <summary>
            Fecha para Campos Fechas
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.BodyMail">
            <summary>
            Cuerpo del Correo
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.servc">
            <summary>
            Servidor de Correo
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.ServCorreo">
            <summary>
            Servidor de Correo
            </summary>
        </member>
        <member name="P:Ophelia.Kactus.Web.remite">
            <summary>
            Remitente de Correo
            </summary>
        </member>
        <member name="M:Ophelia.Kactus.Web.encripta(System.String)">
            <summary>
            Encriptar 
            </summary>
            <param name="cadena">cadena</param>
            <returns>cadena</returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.asciiCadena(System.String)">
            <summary>
            Funcion Cadena ascii 
            </summary>
            <param name="caden">Cadena</param>
            <returns>Resultado</returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.EnviarEmailGmail(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Funcion utilizada para enviar correos con Autenticaci√≥n
            </summary>
            <param name="pSerCorreo">Servidor de Cooreo</param>
            <param name="pCorreoAdmin">Correo Administrador</param>
            <param name="pDestinatario">Destinatario</param>
            <param name="pDestinatarioCC">Con Codia a</param>
            <param name="pAsunto">Asunto</param>
            <param name="pCuerpo">Cuerpo del Correo</param>
            <returns>True si se envio, False si no se envio</returns>
            <remarks></remarks>
        </member>
        <member name="M:Ophelia.Kactus.Web.ObtenerCorreos(System.String)">
            <summary>
            Metodo utilizado para obtener los correos electronicos de destino
            </summary>
            <param name="pCorreos">Cadena con el listado de correos</param>
            <returns>Arreglo de correos</returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.CargarDropMesEsp(System.Int32,System.Web.UI.WebControls.DropDownList)">
            <summary>
            Funcion para Cargar Lista de Meses en Espa√±ol
            </summary>
            <param name="pM">Mes</param>
            <param name="pDDL">DropDownList</param>
        </member>
        <member name="M:Ophelia.Kactus.Web.ConfirmarEvento(System.Web.UI.WebControls.GridViewRowEventArgs,System.String,System.String)">
            <summary>
            Funcion para confirmar evento Grilla
            </summary>
            <param name="e">Grid View Row Event Args</param>
            <param name="pBoton">Boton</param>
            <param name="pMensaje">Mensaje</param>
        </member>
        <member name="M:Ophelia.Kactus.Web.ToHexa(System.String)">
            <summary>
            Funcion para hacer la conversion de Valor a Hexadecimal
            </summary>
            <param name="valor"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Ophelia.Kactus.Web.SepararNombres(System.String)">
            <summary>
            Funcion Utilizada para Sepapara Nombres
            </summary>
            <param name="pNombre">Nombres</param>
            <returns>Arreglo de Nombres</returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.Noticias(System.Web.UI.WebControls.PlaceHolder,System.Data.DataSet)">
            <summary>
            Funcion para mostrar Noticias
            </summary>
            <param name="pPlaceHolder">Place Holder</param>
            <param name="pDatos">Datos</param>
        </member>
        <member name="M:Ophelia.Kactus.Web.VerificarExtension(System.Web.UI.WebControls.FileUpload,System.String)">
            <summary>
            Formato de pObtenerExtensionImg Ejemplo: ".pdf-.doc-.docx-.xls-.xlsx-.ppt-pptx-.gif-.jpg" 
            El separador entre extenciones es el caracter [ - ]
            </summary>
            <param name="pFileUpload"></param>
            <param name="pObtenerExtensionImg"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:Ophelia.Kactus.Web.ValidarPorTipo(System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.String)">
            <summary>
            Inicio - DiegoC - 11/07/2011: Funci√≥n Formulacion de Metas
            Funcion para validar por tipo
            </summary>
            <param name="pTIP_EVAL">Tipo Evaluacion</param>
            <param name="pProPTRI">Valor Trimestre 1</param>
            <param name="pProSTRI">Valor Trimestre 2</param>
            <param name="pProTTRI">Valor Trimestre 3</param>
            <param name="pProCTRI">Valor Trimestre 4</param>
            <param name="pTIP_EVAL_NOM">Nombre tipo Evaluacion</param>
        </member>
        <member name="M:Ophelia.Kactus.Web.ValidarPorTipF(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.String)">
            <summary>
            Inicio - DiegoC - 11/07/2011: Funci√≥n Formulacion de Metas
            Funcion para validar por tipo F
            </summary>
            <param name="pTIP_EVAL">Tipo Evaluacion</param>
            <param name="pProTPTR">Valor Trimestre 1</param>
            <param name="pProTSTR">Valor Trimestre 2</param>
            <param name="pProTTTR">Valor Trimestre 3</param>
            <param name="pProTCTR">Valor Trimestre 4</param>
            <param name="pTIP_EVAL_NOM">Nombre tipo Evaluacion</param>
        </member>
        <member name="M:Ophelia.Kactus.Web.CopiarArchivoEnDwTempParaVerlo(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Inicio - DiegoC - 11/07/2011
            Funcion para Visualizar Archivo de Formulacion de Metas
            </summary>
            <param name="pPag">Pagina</param>
            <param name="pOriPath">Ruta Origen</param>
            <param name="pNomArchivo">Nombre del Archivo</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.DiaSemana(System.DateTime)">
            <summary>
            Funcion para retornar el nombre del dia de la semana de una fecha especifica
            </summary>
            <param name="pValor">Fecha del dia a Validar</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.DiaSabadoDomingo(System.DateTime)">
            <summary>
            Funcion para validar si un dia es Sabado o Domingo
            </summary>
            <param name="pValor">DFecha a Validar</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Kactus.Web.DifeEntHorMin(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
            Funcion Utilizada para calcular la diferencia de Horas y Minutos entre 2 Grupos
             </summary>
             <param name="HorIn">Hora Inicial</param>
             <param name="MinIn">Minuto Inicial</param>
             <param name="HorFi">Hora Final</param>
             <param name="MinFi">Minuto Final</param>
             <returns>Arreglo resultante con Hora(0) y Minuto(1) de Diferencia</returns>
             <remarks>N/A</remarks>
        </member>
        <member name="T:Ophelia.Param.Lista">
            <summary>
            Clase para cargar Listas Estaticas
            </summary>
        </member>
        <member name="F:Ophelia.Param.Lista.dtLista">
            <summary>
            Data Table Con resultado de la lista a mostrar
            </summary>
        </member>
        <member name="M:Ophelia.Param.Lista.#ctor(System.Int32)">
            <summary>
            Inicializa el objeto de Lista
            </summary>
            <param name="pIdLista">Identificador de la lista</param>
        </member>
        <member name="M:Ophelia.Param.Lista.CargarLista(System.Web.UI.WebControls.DropDownList)">
            <summary>
            Retorna un DataSet con las colummnas: valorInterno y valorExterno
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Param.Lista.getNombre(System.String)">
            <summary>
            Obtiene el valor externo de un item en una lista
            </summary>
            <param name="pValor">Valor interno del item</param>
            <returns>Valot externo</returns>
        </member>
        <member name="M:Ophelia.Param.Lista.getValue(System.String)">
            <summary>
            Obtiene el valor interno de un item en una lista
            </summary>
            <param name="pNombre">Valor externo del item</param>
            <returns>Valot interno</returns>
        </member>
        <member name="T:Ophelia.Proteccion.ActionResult`1">
            <summary>
            To de Respuesta de tupla
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Ophelia.Proteccion.ActionResult`1.m_Item1">
            <summary>
            Gets or sets the m item1.
            </summary>
            <value>
            The m item1.
            </value>
        </member>
        <member name="P:Ophelia.Proteccion.ActionResult`1.m_Item2">
            <summary>
            Gets or sets the m item2.
            </summary>
            <value>
            The m item2.
            </value>
        </member>
        <member name="P:Ophelia.Proteccion.ActionResult`1.m_Item3">
            <summary>
            Gets or sets the m item3.
            </summary>
            <value>
            The m item3.
            </value>
        </member>
        <member name="T:Ophelia.Proteccion.Azure">
            <summary>
            Azure_JWT
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.Azure.HandleAzureResponse(System.String,System.String,System.String,System.String,System.String)">
            <summary>
             HandleAzureResponse
            </summary>
            <param name="pCode">code</param>
            <param name="pRetUrl">retUrl</param>
            <param name="pMyUrl">MyUrl</param>
            <param name="pAzureClientId">AzureClientId</param>
            <param name="pAzureSecret">AzureSecret</param>
        </member>
        <member name="M:Ophelia.Proteccion.Azure.SendToAzure(System.String,System.String,System.String)">
            <summary>
             SendToAzure
            </summary>
            <param name="pMyUrl"></param>
            <param name="pAzureClientId"></param>
            <param name="pAzureEndPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.Azure.createFromDic(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             createFromDic
            </summary>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Proteccion.Encriptar">
            <summary>
            Clase Encriptar
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.Encriptar.#ctor">
            <summary>
            Constructor de la Clase Encriptar
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.Encriptar.ObtenerMd5(System.String,System.String)">
            <summary>
            Funcion para encriptar MD5
            </summary>
            <param name="cadena1">Cadena 1</param>
            <param name="cadena2">Cadena 2</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encryption.EncryptQueryString(Ophelia.Proteccion.QueryString)">
            <summary>
            
            </summary>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encryption.DecryptQueryString(Ophelia.Proteccion.QueryString)">
            <summary>
            
            </summary>
            <param name="queryString"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encryption.DeHex(System.String)">
            <summary>
            
            </summary>
            <param name="hexstring"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encryption.Hex(System.String)">
            <summary>
            
            </summary>
            <param name="sData"></param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Proteccion.Motor">
            <summary>
            Motor
            </summary>
        </member>
        <member name="T:Ophelia.Proteccion.API32">
            <summary>
            Calse API32 para encriptar
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.API32.MotorBD">
            <summary>
            Motor Base de Datos
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.API32.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="pMotor">Motor</param>
        </member>
        <member name="M:Ophelia.Proteccion.API32.EncriptarClave(System.String)">
            <summary>
            Funcion Utilizada para encriptar
            </summary>
            <param name="pObjeto">Valor a encriptar</param>
            <returns>Valor encriptado</returns>
        </member>
        <member name="M:Ophelia.Proteccion.API32.DesencriptarClave(System.String)">
            <summary>
            Funcion Utilizada para encriptar
            </summary>
            <param name="pObjeto">Valor a encriptar</param>
            <returns>Valor encriptado</returns>
        </member>
        <member name="M:Ophelia.Proteccion.API32.Desempaquetar(System.String)">
            <summary>
            Funcion Utilizada para desepaquetar 
            </summary>
            <param name="pObjeto">Valor a desempaquetar</param>
            <returns>Valor desempaquetado</returns>
        </member>
        <member name="M:Ophelia.Proteccion.API32.FstGn_Empaquetar(System.String)">
            <summary>
            Metodo para Empaquetar
            </summary>
            <param name="pStNombre">Dato a Empaquetar</param>
            <returns>Valor Empaquetado</returns>
        </member>
        <member name="M:Ophelia.Proteccion.API32.FStGn_Encripta(System.String,Ophelia.Proteccion.Motor)">
            <summary>
            Funcion para Encriptar
            </summary>
            <param name="pClave">Clave</param>
            <param name="pMotorBD">Motor de Base de Datos</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.API32.FstGn_Desempaquetar(System.String)">
            <summary>
            Metodo para desempaquetar
            </summary>
            <param name="pStNombre">Dato a Desempaquetar </param>
            <returns>Valor Desempaquetado</returns>
        </member>
        <member name="T:Ophelia.Proteccion.LDAPDir">
            <summary>
            TO Directorio LDAP
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.LDAPDir.#ctor">
            <summary>
            Constructor de la clase LDAPDir
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Protocolo">
            <summary>
            Protocolo de conexi√≥n LDAP
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Dominio">
            <summary>
            Dominio de ubicaion LDAP
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Usuario">
            <summary>
            Nombre de Usuario de dominio
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Contrasena">
            <summary>
            Contrase√±a de Usuario de Dominio
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Filter">
            <summary>
            Campo por el cual se Filtrara el Usuario
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Codigointerno">
            <summary>
            Codigo Devuelto al realizar la busqueda del usuario en el Dominio
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Propiedadvalor">
            <summary>
            Campo Llave por el cual se Recorreran las Propiedades del Usuario Encontrado
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Tipo">
            <summary>
            Tipo de LDAP - LDAP o OLDAP
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Puerto">
            <summary>
            Puerto de conexion 
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Conexion">
            <summary>
            Atributo de conexion OPEN LDAP cn={0},ou={1},ou=Usuarios,dc=fnc-federacion,dc=com
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Name">
            <summary>
            IP del servidor de Dominio
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.TipoAuth">
            <summary>
            Tipo de Autenticacion Open LDAP
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.LDAPDir.Version">
            <summary>
            Version de Autenticacion Open LDAP
            </summary>
        </member>
        <member name="T:Ophelia.Proteccion.LDAP">
            <summary>
            Clase Autenticacion Directorio ACtivo
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.LDAP.#ctor">
            <summary>
            Constructor de la Clase LDAP
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.LDAP.AuthLDAPByFilterObtenValor(Ophelia.Proteccion.LDAPDir)">
            <summary>
            Funcion de Autenticacion y Filtro en directorio activo
            </summary>
            <param name="pLDAP">TO Parametros</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.LDAP.AuthOLDAPByFilterObtenValor(Ophelia.Proteccion.LDAPDir)">
            <summary>
            Funcion de Autenticacion y Filtro en directorio activo
            </summary>
            <param name="pLDAP">TO Parametros</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.LDAP.AuthLDAPByAuthObtenValor(Ophelia.Proteccion.LDAPDir)">
            <summary>
            Autenticacion en directorio Activo
            </summary>
            <param name="pLDAP">TO Parametros</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Proteccion.Azure_JWT">
            <summary>
            Azure_JWT
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.aud">
            <summary>
              aud
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.iss">
            <summary>
             iss
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.iat">
            <summary>
             iat
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.nbf">
            <summary>
            nbf
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.exp">
            <summary>
            iss
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.ver">
            <summary>
            ver
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.tid">
            <summary>
            tid
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.oid">
            <summary>
            oid
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.upn">
            <summary>
            upn
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.unique_name">
            <summary>
            unique_name
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.sub">
            <summary>
            unique_name
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.family_name">
            <summary>
            family_name
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Azure_JWT.given_name">
            <summary>
            given_name
            </summary>
        </member>
        <member name="T:Ophelia.Proteccion.Oauth2Response">
            <summary>
            Oauth2Response
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.Oauth2Response.id_token">
            <summary>
             id_token
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.Oauth2Response.EncryptionMethod">
            <summary>
            EncryptionMethod
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.Oauth2Response.AzureJwt">
            <summary>
            AzureJwt
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.Oauth2Response.Sig">
            <summary>
              Sig
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.QueryString.Document">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            
            </summary>
            <param name="pValue"></param>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.FromCurrent">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.FromUrl(System.String)">
            <summary>
            
            </summary>
            <param name="pUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.ClearAllExcept(System.String)">
            <summary>
            
            </summary>
            <param name="except"></param>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.ClearAllExcept(System.String[])">
            <summary>
            
            </summary>
            <param name="pExcept"></param>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.Add(System.String,System.String)">
            <summary>
            Funion utilizada para adicionar valores
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.QueryString.ToString(System.Boolean)">
            <summary>
            
            </summary>
            <param name="pIncludeUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encrypt.#ctor">
            <summary>
            Constructor De La Clase
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.Encrypt.key">
            <summary>
            Lave Para Encrypt
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.Encrypt.EncryptPassWord(System.String)">
            <summary>
            Funtion to Encrypt PassWord and Ophelia
            </summary>
            <param name="Cadena">Characters to Encrypt</param>
            <returns>Characters Encrypt</returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encrypt.DecryptPassWord(System.String)">
            <summary>
            Funtion to Decrypt PassWord and Ophelia
            </summary>
            <param name="Cadena">Characters to Decrypt</param>
            <returns>Characters Decrypt</returns>
        </member>
        <member name="M:Ophelia.Proteccion.Encrypt.GenerateCarac(System.Int32)">
            <summary>
            Genera la calve randomica 
            </summary>
            <param name="pCantidad">numero de caracteres de longitud</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Proteccion.AutenticationService">
            <summary>
             Proxy de conexion a Servicio API
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.AutenticationService.UrlSecurityService">
            <summary>
            Obtiene la URL al servicio de seguridad
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.AutenticationService.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.AutenticationService.GetPermission(System.String,System.String)">
            <summary>
            Obtiene los permisos asignados a un usuario en un programa especificado
            </summary>
            <param name="user">Usuario a consultar</param>
            <param name="program">Programa a consultar</param>
            <returns>Resultado de la acci√≥n</returns>
        </member>
        <member name="M:Ophelia.Proteccion.AutenticationService.GetSession(System.String)">
            <summary>
            Obtiene los datos de sesi√≥n asignados a un token
            </summary>
            <param name="token">Token a consultar</param>
            <returns>Resultados de la acci√≥n</returns>
        </member>
        <member name="M:Ophelia.Proteccion.AutenticationService.RefreshSession(System.String)">
            <summary>
            Refresca el tiempo de la sesi√≥n asignada a un token
            </summary>
            <param name="token">Token a refrescar</param>
            <returns>Resultados de la acci√≥n</returns>
        </member>
        <member name="M:Ophelia.Proteccion.AutenticationService.CleanTimeoutSessions">
            <summary>
            Limpia todas las sesiones cuyo tiempo ya expir√≥
            </summary>
            <returns>Resultados de la acci√≥n</returns>
        </member>
        <member name="T:Ophelia.Proteccion.OpheliaAuthorizeAttribute">
            <summary>
            Provee un filtro para autorizar las peticiones a un recurso web
            </summary>
        </member>
        <member name="F:Ophelia.Proteccion.OpheliaAuthorizeAttribute._authService">
            <summary>
            Proxy a los servicios de autenticaci√≥n de ophelia
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.OpheliaAuthorizeAttribute.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.OpheliaAuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
            <summary>
            Determines whether the specified action context is authorized.
            </summary>
            <param name="actionContext">The action context.</param>
            <returns>
              <c>true</c> if the specified action context is authorized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Ophelia.Proteccion.OpSession">
            <summary>
            Encapsula
            </summary>
        </member>
        <member name="M:Ophelia.Proteccion.OpSession.#ctor">
            <summary>
            Inicializa una nueva instancia de la clase
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_apli">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_tokn">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_ipad">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_usua">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_fech">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_esta">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_fecx">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Ses_tipa">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Act_esta">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Act_usua">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="P:Ophelia.Proteccion.OpSession.Act_hora">
            <summary>
            Obtiene o asigna el valor de la propiedad
            </summary>
        </member>
        <member name="T:Ophelia.Seven.Reportes.Servicio.CustomServiceHost`1">
            <summary>
            
            </summary>
            <typeparam name="TContract"></typeparam>
        </member>
        <member name="M:Ophelia.Seven.Reportes.Servicio.CustomServiceHost`1.#ctor(System.Type,System.Uri[])">
            <summary>
            
            </summary>
            <param name="serviceType"></param>
            <param name="baseAddresses"></param>
        </member>
        <member name="M:Ophelia.Seven.Reportes.Servicio.CustomServiceHost`1.GetDefaultBinding">
            <summary>
            Customize your binding here
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Seven.Reportes.GeneraUrl">
            <summary>
            clase que genera url para llamar a los reportes
            </summary>
        </member>
        <member name="M:Ophelia.Seven.Reportes.GeneraUrl.GetURLReporte(System.String,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Retorna la url para cargar programa
            </summary>
            <param name="reporte">nombrereporte</param>
            <param name="parametros">lista de parametros</param>
            <param name="sf">formula de filtro</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Seven.Comun">
            <summary>
            Clase Seven Comun
            </summary>
        </member>
        <member name="M:Ophelia.Seven.Encrypta.DesencriptaClave(System.String)">
            <summary>
            
            </summary>
            <param name="pEntrada"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Seven.Encrypta.EncriptarClave(System.String)">
            <summary>
            
            </summary>
            <param name="pEntrada"></param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Transact.DBGeneradorId">
            <summary>
            Objeto que genera un numero unico para utilizar en base de datos
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBGeneradorId.#ctor">
            <summary>
            Constructor del Objeto
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBGeneradorId.ObtenerLLave">
            <summary>
            Obtiene un numero generado automaticamente
            </summary>
            <returns>Numero generado</returns>
        </member>
        <member name="T:Ophelia.Transact.DBLocator">
            <summary>
            Clase que obtiene la conexion a una base de datos de SQL Server 2000
            </summary>
        </member>
        <member name="F:Ophelia.Transact.DBLocator.provider">
            <summary>
            Define el Motoir de Base de datos
            ORA - Oracle
            SQL - Sql Server 
            INF - Informix
            SYB - Sybase
            POS - PostgreSQL
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBLocator.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBLocator.InsDBLocator">
            <summary>
            Devuelve o crea la instancia de la clase utilizando el patr√≥n Singleton
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBLocator.motorBD">
            <summary>
            Atributo Nombre del Remitente
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBLocator.ConnectionString">
            <summary>
            Funcion Utilizada para Obtener la Cadena de Conexion.
            </summary>
            <returns>Cadena de Conexion</returns>
        </member>
        <member name="T:Ophelia.Transact.DBMoOLE">
            <summary>
            Clase ODBMoOLE
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoOLE.DatasetR">
            <summary>
            Propiedad para optener el Dataset de Resultados
            Fill - Adapte
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoOLE.ObjectR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            ExecuteScalar - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoOLE.ReaderR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            Reader - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoOLE.ReaderRM">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            List - DBReader[] - Command Multi Filas
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoOLE.FilasR">
            <summary>
            Propiedad para optener el total de filas afectadas.
            ExecuteNonQuery - Command
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="pConnection">Cadena de Conexi√≥n</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.OAdapterOLE(System.String)">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI,
            sobre el motor Informix.
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.OCommandOLE(System.Int32,System.String)">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI,
            sobre el motor Informix, con funcion ExecuteScalar.
            </summary>
            <param name="pTipTran">Tipo Transaccion</param>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.OAdapterOLE(System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server.
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.OCommandOLE(System.Int32,System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server, con funcion ExecuteScalar.
            </summary>
            <param name="pTipTran">Tipo Transaccion</param>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.DataReader(System.Data.OleDb.OleDbDataReader)">
            <summary>
            Funcion para convertir el Data Reader del proveedor a uno contenedor estandar.
            </summary>
            <param name="pReader">Data Reader</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoOLE.DataReaderM(System.Data.OleDb.OleDbDataReader)">
            <summary>
            Funcion para convertir el Data Reader del proveedor a uno contenedor estandar, Para Multiples Filas.
            </summary>
            <param name="pReader">Data Reader</param>
        </member>
        <member name="T:Ophelia.Transact.DBMoORA">
            <summary>
            Clase ODBMoORA
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoORA.DatasetR">
            <summary>
            Propiedad para optener el Dataset de Resultados
            Fill - Adapte
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoORA.ObjectR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            ExecuteScalar - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoORA.ReaderR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            Reader - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoORA.ReaderRM">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            List - DBReader[] - Command Multi Filas
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoORA.FilasR">
            <summary>
            Propiedad para optener el total de filas afectadas.
            ExecuteNonQuery - Command
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="pConnection">Cadena de Conexi√≥n</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.OAdapterORA(System.String)">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI,
            sobre el motor Oracle.
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.OCommandORA(System.Int32,System.String)">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI,
            sobre el motor Oracle, con funcion ExecuteScalar, con funcion ExecuteScalar.
            </summary>
            <param name="pTipTran">Tipo Transaccion</param>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.OAdapterORA(System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server.
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.OCommandORA(System.Int32,System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server, con funcion ExecuteScalar.
            </summary>
            <param name="pTipTran">Tipo Transaccion</param>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.OStoreProcedureORA(System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion para ejecutar procediemientos alamcenados
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.SetParametersSP(System.Data.OracleClient.OracleCommand,Ophelia.Transact.DBParameter[])">
            <summary>
            Extention method. Adds query parameters to command object.
            </summary>
            <param name="pCommand">Command object.</param>
            <param name="pParms">Array of name-value query parameters.</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.DataReader(System.Data.OracleClient.OracleDataReader)">
            <summary>
            Funcion para convertir el Data Reader del proveedor a uno contenedor estandar.
            </summary>
            <param name="pReader">Data Reader</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoORA.DataReaderM(System.Data.OracleClient.OracleDataReader)">
            <summary>
            Funcion para convertir el Data Reader del proveedor a uno contenedor estandar, Para Multiples Filas.
            </summary>
            <param name="pReader">Data Reader</param>
        </member>
        <member name="T:Ophelia.Transact.DBMoSQL">
            <summary>
            Clase ODBMoSQL
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoSQL.DatasetR">
            <summary>
            Propiedad para optener el Dataset de Resultados
            Fill - Adapte
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoSQL.ObjectR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            ExecuteScalar - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoSQL.ReaderR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            Reader - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoSQL.ReaderRM">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            List - DBReader[] - Command Multi Filas
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBMoSQL.FilasR">
            <summary>
            Propiedad para optener el total de filas afectadas.
            ExecuteNonQuery - Command
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.#ctor(System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="pConnection">Cadena de Conexi√≥n</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.OAdapterSQL(System.String)">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server.
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.OCommandSQL(System.Int32,System.String)">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server, con funcion ExecuteScalar.
            </summary>
            <param name="pTipTran">Tipo Transaccion</param>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.OAdapterSQL(System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server.
            </summary>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.OCommandSQL(System.Int32,System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion mutilizada para ejecutar las sentecias SQL-ANSI, 
            sobre el motor Sql Server, con funcion ExecuteScalar.
            </summary>
            <param name="pTipTran">Tipo Transaccion</param>
            <param name="pSqlAnsi">Sentencia Sql Estandar Ansi</param>
            <param name="pParametro">Arreglo de parametros</param>
            <returns>Datos resultantes</returns>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.DataReader(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Funcion para convertir el Data Reader del proveedor a uno contenedor estandar.
            </summary>
            <param name="pReader">Data Reader</param>
        </member>
        <member name="M:Ophelia.Transact.DBMoSQL.DataReaderM(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Funcion para convertir el Data Reader del proveedor a uno contenedor estandar, Para Multiples Filas.
            </summary>
            <param name="pReader">Data Reader</param>
        </member>
        <member name="T:Ophelia.Transact.DBParameter">
            <summary>
            Calse para el manejo de Paraqmetros
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBParameter.ParameterName">
            <summary>
            Parametro de Nombre
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBParameter.Value">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBParameter.#ctor">
            <summary>
            Constructor sin parametros.
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBParameter.#ctor(System.String,System.Object)">
            <summary>
            Constructor utilizada para trabajar con parametros
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
        </member>
        <member name="T:Ophelia.Transact.DBReader">
            <summary>
            Clase Reader Digital Ware
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBReader.Name">
            <summary>
            Nombre
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBReader.Value">
            <summary>
            Parametro de Valor
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBReader.Tipo">
            <summary>
            Parametro de Tipo
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBReader.#ctor">
            <summary>
            Constructor sin parametros.
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBReader.#ctor(System.String,System.Object,System.String)">
            <summary>
            Constructor utilizada para trabajar con parametros
            </summary>
            <param name="pName">Nombre</param>
            <param name="pValue">Valor</param>
            <param name="pTipo">Tipo de Dato</param>
        </member>
        <member name="T:Ophelia.Transact.DBTransact">
            <summary>
            Clase utilizada para transformar y manipular, toda la capa de conexion con multiples motores de bases de datos. 
            </summary>
        </member>
        <member name="F:Ophelia.Transact.DBTransact.paramXML">
            <summary>
            Parametro de lectura del XML
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBTransact.DatasetR">
            <summary>
            Propiedad para optener el Dataset de Resultados
            Fill - Adapte
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBTransact.ObjectR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            ExecuteScalar - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBTransact.ReaderR">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            Reader - Command
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBTransact.ReaderRM">
            <summary>
            Propiedad para optener un Objeto de Resultados 
            List - DBReader[] - Command Multi Filas
            </summary>
        </member>
        <member name="P:Ophelia.Transact.DBTransact.FilasR">
            <summary>
            Propiedad para optener el total de filas afectadas.
            ExecuteNonQuery - Command
            </summary>
        </member>
        <member name="F:Ophelia.Transact.DBTransact.BOException">
            <summary>
            objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBTransact.#ctor">
            <summary>
            Constructor de la Clase DBTransact
            </summary>
        </member>
        <member name="M:Ophelia.Transact.DBTransact.#ctor(System.Int32,System.String)">
            <summary>
            Funcion utilizda para Ejecutar una Sentencia en Multiples motores de Bases de Datos sin Parametros
            retornando un conjunto de datos con los resultados de la Sentensia.
            </summary>
            <param name="pTipTran">Adicional, funcion utilizada para validar el tipo de transaccion. 1. Dataset, 2. ExecuteScalar, 3. ExecuteNonQuery, 4. ExecuteReader, 5. ExecuteReader Multi Filas, 6. ExecuteScalar StoredProcedure </param>
            <param name="pSqlAnsi">Sentincia Sql Estandar Ansi para poder ser Ejecutada en Multiples motortes</param>
        </member>
        <member name="M:Ophelia.Transact.DBTransact.#ctor(System.Int32,System.String,Ophelia.DBTOLocator)">
            <summary>
            Funcion utilizda para Ejecutar una Sentencia en Multiples motores de Bases de Datos sin Parametros
            retornando un conjunto de datos con los resultados de la Sentensia.
            </summary>
            <param name="pTipTran">Adicional, funcion utilizada para validar el tipo de transaccion. 1. Dataset, 2. ExecuteScalar, 3. ExecuteNonQuery, 4. ExecuteReader, 5. ExecuteReader Multi Filas, 6. ExecuteScalar StoredProcedure</param>
            <param name="pSqlAnsi">Sentincia Sql Estandar Ansi para poder ser Ejecutada en Multiples motortes</param>
            <param name="pTOLocator">contenedor con informacion de conexion a Base se Datos SQL, ORA, INF, SYB, POS, DB2, OLE</param>
        </member>
        <member name="M:Ophelia.Transact.DBTransact.#ctor(System.Int32,System.String,Ophelia.Transact.DBParameter[])">
            <summary>
            Funcion utilizda para Ejecutar una Sentencia en Multiples motores de Bases de Datos con Parametros
            retornando un conjunto de datos con los resultados de la Sentensia.
            </summary>
            <param name="pTipTran">Adicional, funcion utilizada para validar el tipo de transaccion. 1. Dataset, 2. ExecuteScalar, 3. ExecuteNonQuery, 4. ExecuteReader, 5. ExecuteReader Multi Filas, 6. ExecuteScalar StoredProcedure</param>
            <param name="pSqlAnsi">Sentincia Sql Estandar Ansi para poder ser Ejecutada en Multiples motortes</param>
            <param name="pParametro">Arreglo de parametros</param>
        </member>
        <member name="M:Ophelia.Transact.DBTransact.#ctor(System.Int32,System.String,Ophelia.Transact.DBParameter[],Ophelia.DBTOLocator)">
            <summary>
            Funcion utilizda para Ejecutar una Sentencia en Multiples motores de Bases de Datos con Parametros
            retornando un conjunto de datos con los resultados de la Sentensia.
            </summary>
            <param name="pTipTran">Adicional, funcion utilizada para validar el tipo de transaccion. 1. Dataset, 2. ExecuteScalar, 3. ExecuteNonQuery, 4. ExecuteReader, 5. ExecuteReader Multi Filas, 6. ExecuteScalar StoredProcedure</param>
            <param name="pSqlAnsi">Sentincia Sql Estandar Ansi para poder ser Ejecutada en Multiples motortes</param>
            <param name="pParametro">Arreglo de parametros</param>
            <param name="pTOLocator">contenedor con informacion de conexion a Base se Datos SQL, ORA, INF, SYB, POS, DB2, OLE</param>
        </member>
        <member name="T:Ophelia.Translate.Page">
            <summary>
            Clase de Multilenguaje o Multidioma 
            </summary> // Autor Luis Fernando Leal
        </member>
        <member name="P:Ophelia.Translate.Page.Instance">
            <summary>
            Devuelve o crea la instancia de la clase utilizando el patr√≥n Singleton
            </summary>
        </member>
        <member name="P:Ophelia.Translate.Page.idio_pagi">
            <summary>
            Hast Table con todo el contenido de idioma
            </summary>
        </member>
        <member name="M:Ophelia.Translate.Page.ValorMenu(System.String,System.String,System.String)">
            <summary>
            funcion Utilizada para Obtener el Nombre por Opcion del Menu.
            </summary>
            <param name="pIdioma">Idioma</param>
            <param name="pPagina">Pagina</param>
            <param name="pIdControl">Id del Control</param>
            <returns>Key para el Hashtable</returns>
        </member>
        <member name="M:Ophelia.Translate.Page.CargarHashtable">
            <summary>
            Funcion para cargar Hash Table con idioma de la pagina
            </summary>
            <param name="pPagina"></param>
        </member>
        <member name="M:Ophelia.Translate.Page.IdiomasPagina">
            <summary>
            Funcion para obtener el texto de los idiomas por pagina.
            </summary>
            <param name="pPagina">Pagina</param>
            <returns>Dataser de Carga</returns>
        </member>
        <member name="M:Ophelia.Translate.Page.KeyIdioPagi(System.String,System.String,System.String)">
            <summary>
            Funcion utilizada para calcular KeyIdioPagi
            </summary>
            <param name="pCOD_IDIO">Idioma</param>
            <param name="pCOD_PROG">Pagina</param>
            <param name="pIDE_CONT">Id del Control</param>
            <returns>Key para el Hashtable</returns>
        </member>
        <member name="M:Ophelia.Translate.Page.MultilenguajeGenerico(System.String,System.String,System.Web.UI.ControlCollection)">
            <summary>
            Funcion General para el manejo de Multilenguaje
            </summary>
            <param name="pPagina">Pagina</param>
            <param name="pIdioma">Idioma</param>
            <param name="pControles">Controles del formulario</param>
        </member>
        <member name="M:Ophelia.Translate.Page.Multilenguaje(System.String,System.String,System.String,System.String)">
            <summary>
            Funcion para cambio de Idioma a un control
            </summary>
            <param name="pIdioma">Cultura o Idioma</param>
            <param name="pPagina">Identificador de la Pagina</param>
            <param name="pId_Control">Id Control a Modificar</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Translate.Text">
            <summary>
            Elaborada Por Luis Fernando Leal 
            Esta clase es para Encontrar ID control Texto y Pagina para la elaboracion del Multilenuaje 
            </summary>
        </member>
        <member name="M:Ophelia.Translate.Text.TextoControlesPagina(System.Web.UI.ControlCollection,System.String)">
            <summary>
            Funci√≥n que recorre la pagina y guarda el id del control
            y el texto para el cambio del leguaje 
            </summary>
            <param name="Controles"> Coleccion de Controles de la Pagina Opci√≥n this.Controls</param>
            <param name="pPagina"> Coleccion de Controles de la Pagina Opci√≥n this.Controls</param>
        </member>
        <member name="M:Ophelia.Translate.Text.InsertarDatos(System.String,System.String,System.String)">
            <summary>
            Funcion para Guardar el Id texto de un control especifico 
            para la traducci√≥n del texto 
            </summary>
            <param name="idControl">Recibe el Id del control</param>
            <param name="idTextoControl">Reibe el Texto del Control</param>
            <param name="pCodPagina">Recibe el tipo</param>
        </member>
        <member name="M:Ophelia.Translate.Text.ComprobarExistenciaControl(System.String,System.String)">
            <summary>
            Funcion que comprueba la existencia del Registro en la base de Datos 
            </summary>
            <param name="pIdControl"></param>
            <param name="pPagina"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Translate.Text.ComprobarExistenciaControlT(System.String,System.String)">
            <summary>
            Funcion que comprueba la existencia del Registro en la base de Datos 
            </summary>
            <param name="pIdControl"></param>
            <param name="pPagina"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.Translate.Text.EsNumerico(System.String)">
            <summary>
            Funcion para validar si el texto es Numerico
            </summary>
            <param name="val">String </param>
            <returns>true and false</returns>
        </member>
        <member name="T:Ophelia.Web.Combo">
            <summary>
            roporciona funcionalidades de Combos Web
            </summary>
        </member>
        <member name="M:Ophelia.Web.Combo.ConstruirCombo(System.Web.UI.WebControls.DropDownList,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Llena un DropDownList con la informaci√≥n del par√°metro datos
            </summary>
            <param name="lista">Objeto DropDownList al que se agregar√°n los √≠tems de la lista</param>
            <param name="datos">Lista de las opciones del DropDownList a crear [codigo, valor]</param>
        </member>
        <member name="M:Ophelia.Web.Combo.SeleccionarValorDropDownList(System.Web.UI.WebControls.DropDownList,System.String)">
            <summary>
            Selecciona un item en el control lista que contiene un valor espec√≠fico (Si existe)
            </summary>
            <param name="lista">Control DropDownList en el que se realizar√° la busqueda</param>
            <param name="valorASeleccionar">Valor a seleccionar en la lista</param>
            <returns>True si el valor existe en la lista, False sino existe</returns>
        </member>
        <member name="M:Ophelia.Web.Combo.CargarDropDownList(System.Web.UI.WebControls.DropDownList,System.Data.DataSet,System.Int32,System.Int32)">
            <summary>
            Funcion Uyilizada para Cargar los DropDownList
            </summary>
            <param name="pDrop">DropDownList</param>
            <param name="pDatos">Datos</param>
            <param name="pCampoTexto">Campos Texto</param>
            <param name="pCampoValor">Campo Valor</param>
        </member>
        <member name="M:Ophelia.Web.Combo.CargarDropDownList(System.Web.UI.WebControls.DropDownList,System.Data.DataSet,System.String,System.String)">
            <summary>
            Funcion Uyilizada para Cargar los DropDownList
            </summary>
            <param name="pDrop">DropDownList</param>
            <param name="pDatos">Datos</param>
            <param name="pCampoTexto">Campos Texto</param>
            <param name="pCampoValor">Campo Valor</param>
        </member>
        <member name="M:Ophelia.Web.Combo.CargarDropDownList(System.Web.UI.WebControls.DropDownList,System.Data.DataSet,System.Int32,System.Int32,System.String)">
            <summary>
            Funcion Uyilizada para Cargar los DropDownList
            </summary>
            <param name="pDrop">DropDownList</param>
            <param name="pDatos">Datos</param>
            <param name="pCampoTexto">Campos Texto</param>
            <param name="pCampoValor">Campo Valor</param>
            <param name="pValorDefecto">Valor por Defecto</param>
        </member>
        <member name="M:Ophelia.Web.Combo.CargarDropDownList(System.Web.UI.WebControls.DropDownList,System.Data.DataSet,System.String,System.String,System.String)">
            <summary>
            Funcion Uyilizada para Cargar los DropDownList
            </summary>
            <param name="pDrop">DropDownList</param>
            <param name="pDatos">Datos</param>
            <param name="pCampoTexto">Campos Texto</param>
            <param name="pCampoValor">Campo Valor</param>
            <param name="pValorDefecto">Valor por Defecto</param>
        </member>
        <member name="T:Ophelia.Web.Comun">
            <summary>
            Proporciona funcionalidades Web comunes
            </summary>
        </member>
        <member name="T:Ophelia.Web.MenuTreView">
            <summary>
            TO de los atributos necesarios para crear el men√∫
            </summary>
        </member>
        <member name="P:Ophelia.Web.MenuTreView.men_iden">
            <summary>
            Id del men√∫
            </summary>
        </member>
        <member name="P:Ophelia.Web.MenuTreView.men_padr">
            <summary>
            Id del padre del men√∫
            </summary>
        </member>
        <member name="P:Ophelia.Web.MenuTreView.tra_desc">
            <summary>
            Descripci√≥n del men√∫
            </summary>
        </member>
        <member name="P:Ophelia.Web.MenuTreView.pro_ruta">
            <summary>
            Path asociado al programa del men√∫
            </summary>
        </member>
        <member name="P:Ophelia.Web.MenuTreView.sis_iden">
            <summary>
            Nombre del sistema al que pertenece el men√∫
            </summary>
        </member>
        <member name="P:Ophelia.Web.MenuTreView.pro_iden">
            <summary>
            Id del programa
            </summary>
        </member>
        <member name="T:Ophelia.Web.Menu">
            <summary>
            Proporciona funcionalidades de Men√∫s Web
            </summary>
        </member>
        <member name="M:Ophelia.Web.Menu.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="M:Ophelia.Web.Menu.ConstruccionMenu(System.Web.UI.WebControls.TreeView,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView},System.Int32,System.String)">
            <summary>
            Segundo metodo utilizadao para cargar el menu
            </summary>
            <param name="pTreeView">TreeView</param>
            <param name="pListaMenu">ListaMenu</param>
            <param name="pAmbiente">Ambiente</param>
            <param name="pTipoMenuK">Tipo Menu Kactus C = Clasico, N = Nuevo</param>
        </member>
        <member name="M:Ophelia.Web.Menu.AddMenuItem(System.Web.UI.WebControls.MenuItem,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView},System.Web.UI.WebControls.TreeNode,System.String)">
            <summary>
            Adicionar Items al Menu
            </summary>
            <param name="pMnuMenuItem">MnuMenuItem</param>
            <param name="pListaMenu">ListaMenu</param>
            <param name="pArbolI">ArbolI</param>
        </member>
        <member name="M:Ophelia.Web.Menu.ConstruccionMenuGrupo(System.Web.UI.WebControls.TreeView,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView})">
            <summary>
            Segundo metodo utilizadao para cargar el menu
            </summary>
            <param name="pTreeView">TreeView</param>
            <param name="pListaMenu">ListaMenu</param>
        </member>
        <member name="M:Ophelia.Web.Menu.AddMenuItemGrupo(System.Web.UI.WebControls.MenuItem,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView},System.Web.UI.WebControls.TreeNode)">
            <summary>
            Adicionar Items al Menu
            </summary>
            <param name="pMnuMenuItem">MnuMenuItem</param>
            <param name="pListaMenu">ListaMenu</param>
            <param name="pArbolI">ArbolI</param>
        </member>
        <member name="M:Ophelia.Web.Menu.ConstruccionMenuTreeViewGenerico(System.Web.UI.WebControls.TreeView,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView})">
            <summary>
            Segundo metodo utilizadao para cargar el menu
            </summary>
            <param name="pTreeView">TreeView</param>
            <param name="pListaMenu">ListaMenu</param>
        </member>
        <member name="M:Ophelia.Web.Menu.AddMenuItemGenericoTreeView(System.Web.UI.WebControls.MenuItem,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView},System.Web.UI.WebControls.TreeNode)">
            <summary>
            Adicionar Items al Menu
            </summary>
            <param name="pMnuMenuItem">MnuMenuItem</param>
            <param name="pListaMenu">ListaMenu</param>
            <param name="pArbolI">ArbolI</param>
        </member>
        <member name="M:Ophelia.Web.Menu.ConstruccionMenuHGenerico(System.Web.UI.WebControls.Menu,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView})">
            <summary>
            Segundo metodo utilizadao para cargar el menu
            </summary>
            <param name="pMenu">TreeView</param>
            <param name="pListaMenu">ListaMenu</param>
        </member>
        <member name="M:Ophelia.Web.Menu.AddMenuItemGenericoH(System.Web.UI.WebControls.MenuItem,System.Collections.Generic.SortedList{System.Int64,Ophelia.Web.MenuTreView})">
            <summary>
            Adicionar Items al Menu
            </summary>
            <param name="pMnuMenuItem">MnuMenuItem</param>
            <param name="pListaMenu">ListaMenu</param>
        </member>
        <member name="T:Ophelia.Web.HierarchicalDataSet">
            <summary>
            Clase HierarchicalDataSet
            </summary>
        </member>
        <member name="M:Ophelia.Web.HierarchicalDataSet.#ctor(System.Data.DataSet,System.String,System.String)">
            <summary>
            The constructor of the class
            </summary>
            <param name="dataSet">The dataset that contains the data</param>
            <param name="idColumnName">The Primary key column name</param>
            <param name="pParentIdColumnName">The Parent Primary key column name that identifies the Parent-Child relationship</param>
        </member>
        <member name="E:Ophelia.Web.HierarchicalDataSet.DataSourceChanged">
            <summary>
            DataSourceChanged
            </summary>
        </member>
        <member name="M:Ophelia.Web.HierarchicalDataSet.GetHierarchicalView(System.String)">
            <summary>
            GetHierarchicalView
            </summary>
            <param name="viewPath">Ruta</param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.Windows.Comun">
            <summary>
            Clase Comun
            </summary>
        </member>
        <member name="T:Ophelia.appSettingsChange">
            <summary>
            Cambiar appSettings Se
            </summary>
        </member>
        <member name="M:Ophelia.appSettingsChange.ModifiedAppSettings(System.String,System.String)">
            <summary>
            Funcion para Modificar AppSetting de Web.Config
            </summary>
            <param name="pKey">Key</param>
            <param name="pValor">Valor</param>
        </member>
        <member name="T:Ophelia.LogTransaccional">
            <summary>
             Log Transacconal
            </summary>
        </member>
        <member name="M:Ophelia.LogTransaccional.#ctor">
            <summary>
            Constructor de la clase 
            </summary>
        </member>
        <member name="M:Ophelia.LogTransaccional.ObtenerRMT(Ophelia.OTOContext)">
            <summary>
             ObtenerRMT OP_LOGOP
            </summary>
            <param name="pTOContext">TOContex</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.LogTransaccional.LogTransaccionalOpLogop(Ophelia.OTOContext)">
            <summary>
            Funci√≥n que realiza la inserci√≥n de un registro compelto de una tabla a la base de datos
            </summary>
            <returns>Devuelve un verdadero o falso confirmando la insercion</returns>
        </member>
        <member name="T:Ophelia.ViewStateSerializer">
            <summary>
            Advanced ViewState Serializer / Compressor / Encrypter
            </summary>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.#ctor(System.Web.UI.Page)">
            <summary>
            ViewStateSerializer
            </summary>
            <param name="page">page</param>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.#ctor(System.Web.UI.Page,Ophelia.ViewStateSerializer.SecurityLevel,System.Boolean)">
            <summary>
            ViewStateSerializer
            </summary>
            <param name="page">page</param>
            <param name="EnCrypt">EnCrypt</param>
            <param name="Optimize">Optimize</param>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.Load">
            <summary>
            Load
            </summary>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.Save">
            <summary>
            Save
            </summary>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.Serialize(System.Object)">
            <summary>
            Serialize
            </summary>
            <param name="viewState">viewState</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.DeSerialize(System.String)">
            <summary>
            DeSerialize
            </summary>
            <param name="viewState">viewState</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.GZipCompress(System.Byte[])">
            <summary>
            GZipCompress
            </summary>
            <param name="data">data</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.GZipDecompress(System.Byte[])">
            <summary>
            GZipDecompress
            </summary>
            <param name="data">data</param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.CompressPage">
            <summary>
            CompressPage
            </summary>
        </member>
        <member name="M:Ophelia.ViewStateSerializer.Cryptos(System.Byte[],System.Collections.Hashtable,Ophelia.ViewStateSerializer.CryptosMode)">
            <summary>
            Cryptos
            </summary>
            <param name="data">data</param>
            <param name="keys">keys</param>
            <param name="modomodoparam">modo</param>
            <returns>valor</returns>
        </member>
        <member name="T:Ophelia.ViewStateSerializer.CryptosMode">
            <summary>
            CryptosMode
            </summary>
        </member>
        <member name="F:Ophelia.ViewStateSerializer.CryptosMode.DeCrypt">
            <summary>
            DeCrypt
            </summary>
        </member>
        <member name="F:Ophelia.ViewStateSerializer.CryptosMode.EnCrypt">
            <summary>
            EnCrypt
            </summary>
        </member>
        <member name="T:Ophelia.ViewStateSerializer.SecurityLevel">
            <summary>
            SecurityLevel
            </summary>
        </member>
        <member name="F:Ophelia.ViewStateSerializer.SecurityLevel.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Ophelia.ViewStateSerializer.SecurityLevel.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="F:Ophelia.ViewStateSerializer.SecurityLevel.High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Ophelia.ViewStateSerializer.SecurityLevel.Machine">
            <summary>
            Machine
            </summary>
        </member>
        <member name="T:Ophelia.DBTOLocator">
            <summary>
            Objeto Transaccional de conexiones a Bases de Datos.
            </summary>
        </member>
        <member name="M:Ophelia.DBTOLocator.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_cabd">
            <summary>
            Atributo Cadena de conexion
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_sebd">
            <summary>
            Atributo Servidor Base de Datos
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_nobd">
            <summary>
            Atributo Nombre Base de Datos
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_alia">
            <summary>
            Atributo Alisa Conexion
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_usdb">
            <summary>
            Atributo Usuario Base de Datos
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_padb">
            <summary>
            Atributo Clave Base de Datos
            </summary>
        </member>
        <member name="P:Ophelia.DBTOLocator.dbl_mtor">
            <summary>
            Atributo Motor Base de Datos
            </summary>
        </member>
        <member name="T:Ophelia.Email">
            <summary>
            Clase Utilizada para el envio de correo
            </summary>
        </member>
        <member name="F:Ophelia.Email.BOException">
            <summary>
            Objeto para el control de excepciones del sistema
            </summary>
        </member>
        <member name="F:Ophelia.Email.HParamXML">
            <summary>
            Objeto para lectura de XML
            </summary>
        </member>
        <member name="M:Ophelia.Email.#ctor">
            <summary>
             Constructor del Business Object del programa
            </summary>
        </member>
        <member name="M:Ophelia.Email.EnviarEmail(Ophelia.TOEmail)">
            <summary>
            Metodo utilizado para el envio de correo eletronico
            </summary>
            <param name="pTOEmail">Objeto con los datos del correo electronico</param>
        </member>
        <member name="M:Ophelia.Email.EnviarEmailTodo(Ophelia.TOEmail)">
            <summary>
            Metodo utilizado para el envio de correo eletronico
            </summary>
            <param name="pTOEmail">Objeto con los datos del correo electronico</param>
        </member>
        <member name="M:Ophelia.Email.ObtenerCorreos(System.String)">
            <summary>
            Metodo utilizado para obtener los correos electronicos de destino
            </summary>
            <param name="pCorreos">Cadena con el listado de correos</param>
            <returns>Arreglo de correos</returns>
        </member>
        <member name="T:Ophelia.Logs">
            <summary>
            Clase de Administacion de Logs
            </summary>
        </member>
        <member name="M:Ophelia.Logs.#ctor">
            <summary>
            Constructor Logs
            </summary>
        </member>
        <member name="M:Ophelia.Logs.LogTransac(System.String,Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para el DBTransac
            </summary>
            <param name="pMensaje">Mesnaje</param>
            <param name="pTOContext">TOContext</param>
        </member>
        <member name="M:Ophelia.Logs.LogSF(System.String,Ophelia.OTOContext)">
            <summary>
            Funcion Utilizada para las SF
            </summary>
            <param name="pMensaje">Mensaje</param>
            <param name="pTOContext">TOContext</param>
        </member>
        <member name="T:Ophelia.TOEmail">
            <summary>
            Objeto de transferencia de datos para CorreoElectronico
            </summary>
        </member>
        <member name="M:Ophelia.TOEmail.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_iden">
            <summary>
            Atributo Remitente
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_remi">
            <summary>
            Atributo Remitente
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_dest">
            <summary>
            Atributo Destinatarios
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_asun">
            <summary>
            Atributo Asunto
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_desc">
            <summary>
            Atributo Cuerpo del Correo
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_nomb">
            <summary>
            Atributo Nombre del Remitente
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_assl">
            <summary>
            Atributo Activa SSl
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_html">
            <summary>
            Atributo Activa Formato HTML, Body Html.
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_dcco">
            <summary>
            Atributo con copia oculta
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_decc">
            <summary>
            Atributo con copia
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.ema_adju">
            <summary>
            Lista de archivos adjuntos path del temporal
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.webUser">
            <summary>
            Usuario para envio
            </summary>
        </member>
        <member name="P:Ophelia.TOEmail.password">
            <summary>
            Clave para envio
            </summary>
        </member>
        <member name="T:Ophelia.OExcepcion">
            <summary>
            Excepciones administradas por el sistema
            </summary>
        </member>
        <member name="F:Ophelia.OExcepcion.ubicacionExcepcion">
            <summary>
            Ubicacion Excepcion
            </summary>
        </member>
        <member name="M:Ophelia.OExcepcion.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Ophelia.OExcepcion.#ctor(System.String)">
            <summary>
            Constructor con un parametro
            </summary>
            <param name="pMensaje">Mensaje</param>
        </member>
        <member name="M:Ophelia.OExcepcion.#ctor(System.String,System.Exception)">
            <summary>
            Constructor con dos parametros
            </summary>
            <param name="pMensaje">Mesaje</param>
            <param name="pError">Erroro</param>
        </member>
        <member name="T:Ophelia.OException">
            <summary>
            Gestiona las excepciones del sistema
            </summary>
        </member>
        <member name="M:Ophelia.OException.#ctor">
            <summary>
            Obtiene la instancia de un objeto de tipo DwSevenHP.DwSevenGenHPExcepcion
            </summary>
        </member>
        <member name="M:Ophelia.OException.ObtenerMensajeBO(System.String)">
            <summary>
            Obtiene los mensajes de error de un XML
            </summary>
            <param name="pCodigo">Codigo interno asignado al mensaje</param>
            <returns>Mensaje correspondiente al c√≥digo</returns>
        </member>
        <member name="M:Ophelia.OException.ObtenerMensajeBO(System.String,System.String,System.String)">
            <summary>
            Obtiene los mensajes de error de un XML
            </summary>
            <param name="pCodigoA">Codigo interno asignado al mensaje Inicial</param>
            <param name="pCadena">Mensaje interno</param>
            <param name="pCodigoB">Codigo interno asignado al mensaje Final</param>
            <returns>Mensaje correspondiente al c√≥digo</returns>
        </member>
        <member name="M:Ophelia.OException.Throw(System.String,System.String,System.String,System.Exception)">
            <summary>
            Gestina todas las excepciones del sistema
            </summary>
            <param name="pNameSpace">Name Space</param>
            <param name="pClase">Nombre de la clase</param>
            <param name="pMetodo">Nombre del metodo</param>
            <param name="e">Excepcion que se controla</param>
        </member>
        <member name="M:Ophelia.OException.Throw(System.String,System.String,System.Exception)">
            <summary>
            Gestina todas las excepciones del sistema
            </summary>
            <param name="pClase">Nombre de la clase</param>
            <param name="pMetodo">Nombre del metodo</param>
            <param name="e">Excepcion que se controla</param>
        </member>
        <member name="T:Ophelia.ExceptionManager">
            <summary>
            Provee servicios para la administraci√≥n de errores
            </summary>
        </member>
        <member name="F:Ophelia.ExceptionManager._instance">
            <summary>
            Unica instancia de la clase
            </summary>
        </member>
        <member name="P:Ophelia.ExceptionManager.Instance">
            <summary>
            Obtiene la √∫nica instancia de la clase
            </summary>
        </member>
        <member name="F:Ophelia.ExceptionManager._source">
            <summary>
            Nombre de la fuente
            </summary>
        </member>
        <member name="F:Ophelia.ExceptionManager._log">
            <summary>
            Nombre del log en el sistema
            </summary>
        </member>
        <member name="M:Ophelia.ExceptionManager.WriteMessageWarning(System.String)">
            <summary>
            Escribe un mensaje de advertencia en el log del sistema
            </summary>
            <param name="message">Mensaje a escribir</param>
        </member>
        <member name="M:Ophelia.ExceptionManager.WriteMessageInfo(System.String)">
            <summary>
            Escribe un mensaje informativo en el log del sistema
            </summary>
            <param name="message">Mensaje a escribir</param>
        </member>
        <member name="M:Ophelia.ExceptionManager.WriteErrorInfo(System.Exception)">
            <summary>
            Escribe la informaci√≥n del error en el log de eventos del sistema
            </summary>
            <param name="ex">Excepci√≥n que gener√≥ el error</param>
        </member>
        <member name="M:Ophelia.ExceptionManager.GetErrorInfo(System.Exception)">
            <summary>
            Obtiene toda la informaci√≥n del error ocurrido
            </summary>
            <param name="ex">Excepci√≥n que ocacion√≥ el error</param>
            <returns>Cadena de texto con toda la informaci√≥n del error</returns>
        </member>
        <member name="M:Ophelia.ExceptionManager.ReadException(System.Exception,System.Text.StringBuilder@)">
            <summary>
            Lee recursivamente toda la pila de excepciones para construir el mensaje de error completo
            </summary>
            <param name="ex">Excepci√≥n a leer</param>
            <param name="sb">Constructor de cadena</param>
        </member>
        <member name="M:Ophelia.ExceptionManager.EnsureEventConfig">
            <summary>
            Se asegura de que la configuraci√≥n del log en el sistema exista
            </summary>
        </member>
        <member name="T:Ophelia.OTOContext">
            <summary>
            Objeto Transaccional de conexiones a Bases de Datos.
            </summary>
        </member>
        <member name="M:Ophelia.OTOContext.#ctor">
            <summary>
            Constructor de la clase
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Ambiente">
            <summary>
            Ambiente de Instalacion
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Sistema">
            <summary>
            Sistemas a utilizar
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.IdentificacionUsuario">
            <summary>
            Identificacion Usuario
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.AuditoriaFechaCreacion">
            <summary>
            Auditoria Fecha Creacion
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.AuditoriaFechaModificacion">
            <summary>
            Auditoria Fecha Modificacion
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.UsuariosCodigo">
            <summary>
            Codigo Usuarios
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.UsuariosNombre">
            <summary>
            Nombre Usuarios
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.UsuarioCodigoGrupo">
            <summary>
            Codigo de Grupo Principal
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.UsuarioTipo">
            <summary>
            Tipo Usuario
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.UsuarioWindows">
            <summary>
             Usuario Windows
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.UsuarioMail">
            <summary>
            Usuario Mail
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.IdentificadorEmpresa">
            <summary>
            Identificador Empresa
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.CodigoEmpresa">
            <summary>
            Codigo Empresa
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.IpAccesoUsuario">
            <summary>
            Ip Acceso Usuario
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.HostAccesoUsuario">
            <summary>
            Host Acceso Usuario
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.CambioOpPermi">
            <summary>
            Atributo para validar si hay cambio sen OpPermi y Recargar el Singleton
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.ActivarLogs">
            <summary>
            Atributo para activar logs
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.ActivarLogsInte">
            <summary>
            Atributo para activar logs
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Pagina">
            <summary>
            Atributo para pagina de operaci√≥n
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.OperacionBD">
            <summary>
            Atributo para activar Operaci√≥n Base de Datos
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.OperacionSQL">
            <summary>
            Atributo Operacion SQL
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.OperacionParametros">
            <summary>
            Atributo Operacion Parametros
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.OperacionMotor">
            <summary>
            Atributo Motor BD
            SQL    - SQL Server
            ORA    - ORACLE
            ODB    - ODBC
            OLE    - OLEDB
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Mensaje">
            <summary>
             Mensaje
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Version">
            <summary>
             Version del software
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Tabla">
            <summary>
             Tabla
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Servidor">
            <summary>
             Servidor
            </summary>
        </member>
        <member name="P:Ophelia.OTOContext.Programa">
            <summary>
             Programa
            </summary>
        </member>
        <member name="P:Ophelia.OpheliaConfigSection.Sistemas">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Motor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Cadena">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Protocolo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Serverapp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Alias">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Serverreport0">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Serverreport1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Serverreport2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentElement.Serverftp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ophelia.SistemaElement">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.SistemaElement.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.SistemaElement.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.SistemaElement.Enviroments">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.SistemaElement.Domains">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ophelia.SistemaCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.SistemaCollection.Add(Ophelia.SistemaElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Ophelia.SistemaCollection.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Ophelia.SistemaCollection.CreateNewElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.SistemaCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.SistemaCollection.CollectionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.SistemaCollection.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.SistemaCollection.IsElementName(System.String)">
            <summary>
            
            </summary>
            <param name="elementName"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.SistemaCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.SistemaCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.SistemaCollection.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Ophelia.EnvironmentCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.EnvironmentCollection.Add(Ophelia.EnvironmentElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Ophelia.EnvironmentCollection.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Ophelia.EnvironmentCollection.CreateNewElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.EnvironmentCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.EnvironmentCollection.CollectionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentCollection.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.EnvironmentCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.EnvironmentCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.EnvironmentCollection.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.DomainElement.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.port">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.conexion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.version">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.autenticacion">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainElement.atributoldap">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ophelia.DomainCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Ophelia.DomainCollection.Add(Ophelia.DomainElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Ophelia.DomainCollection.Remove(System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Ophelia.DomainCollection.CreateNewElement">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DomainCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.DomainCollection.CollectionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainCollection.ElementName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Ophelia.DomainCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Ophelia.DomainCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Ophelia.DomainCollection.ContainsKey(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
    </members>
</doc>
